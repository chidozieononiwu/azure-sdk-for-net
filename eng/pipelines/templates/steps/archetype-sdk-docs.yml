steps:
  - pwsh: |
      Invoke-WebRequest -Uri "https://github.com/dotnet/docfx/releases/download/v2.43.2/docfx.zip" `
      -OutFile "docfx.zip" | Wait-Process; Expand-Archive -Path "docfx.zip" -DestinationPath "./docfx/"
    workingDirectory: $(Build.BinariesDirectory)
    displayName: Download and Extract DocFX
  - task: CmdLine@2
    displayName: Provision DocFX Directory
    inputs:
      script: $(Build.BinariesDirectory)/docfx/docfx.exe init -q
      workingDirectory: $(Build.SourcesDirectory)
      failOnStderr: true
  - pwsh: New-Item -Path . -Name "templates" -ItemType "directory"
    displayName: Create Template Directory
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/
  - task: CopyFiles@2
    displayName: Copy Template to templates folder
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/eng/docgeneration/templates
      content: '**\*'
      targetFolder: $(Build.SourcesDirectory)/docfx_project/templates
      overWrite: true
  - pwsh: ls
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/
  - pwsh: ls
    workingDirectory: $(Build.SourcesDirectory)/docfx_project/templates
  - pwsh: |
      Copy-Item "$(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}/$(PackageName)/docfx.json" -Destination "$(Build.SourcesDirectory)/docfx_project/" -Force
    displayName: Copy over docfx.json
  - task: CmdLine@2
    displayName: Generate MetaData
    inputs:
      script: $(Build.BinariesDirectory)/docfx/docfx.exe metadata docfx.json
      workingDirectory: $(Build.SourcesDirectory)/docfx_project/
      failOnStderr: true
  - pwsh: |
      $PkgReadMePath = "$(Build.SourcesDirectory)/sdk/${{parameters.ServiceDirectory}}/$(PackageName)/README.md"
      if (![System.IO.File]::Exists($PkgReadMePath))
      {
        Copy-Item $PkgReadMePath -Destination "$(Build.SourcesDirectory)/docfx_project/api/index.md" -Force
      }
      else
      {
        Write-Host "Package ReadMe was not found"
      }

      Copy-Item "$(Build.SourcesDirectory)/README.md" -Destination "$(Build.SourcesDirectory)/docfx_project/index.md" -Force

      # Create Toc for Site Navigation
      New-Item "$(Build.SourcesDirectory)/docfx_project/toc.yml" -Force
      Add-Content -Path "$(Build.SourcesDirectory)/docfx_project/toc.yml" -Value "- name: $(PackageName) Api Documentation`r`n  href: api/`r`n  homepage: api/index.md"
    displayName: Copy over Package ReadMe and toc.yml
    continueOnError: true
  - task: CmdLine@2
    displayName: Build Doc Content
    inputs:
      script: $(Build.BinariesDirectory)/docfx/docfx.exe build docfx.json
      workingDirectory: $(Build.SourcesDirectory)/docfx_project/
      failOnStderr: true
  - pwsh: |
      Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/assets/*" -Destination "$(Build.SourcesDirectory)/docfx_project/_site/" -Force
    displayName: Replace site assets
  - task: CopyFiles@2
    displayName: Copy HTML to Artifacts Directory
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/docfx_project/
      content: '**\*'
      targetFolder: $(Build.ArtifactStagingDirectory)/$(PackageName)/docfx_project
      overWrite: true
  - task: PublishPipelineArtifact@0
    condition: succeeded()
    inputs:
      artifactName: "Doc.$(PackageName)"
      targetPath: $(Build.ArtifactStagingDirectory)/$(PackageName)/docfx_project/_site