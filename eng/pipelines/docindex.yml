resources:
  repositories:
    - repository: azure-sdk-tools
      type: github
      name: chidozieononiwu/azure-sdk-tools
      ref: refs/heads/ScriptForProcessingDocIndex
      endpoint: chidozieononiwu

jobs:
  - job: GenerateDocIndex
    variables:
      - template: templates/variables/globals.yml
    pool:
      vmImage: windows-2019
    steps:
      - pwsh: |
          Invoke-WebRequest -Uri "https://github.com/dotnet/docfx/releases/download/v2.43.2/docfx.zip" `
          -OutFile "docfx.zip" | Wait-Process; Expand-Archive -Path "docfx.zip" -DestinationPath "./docfx/"

          ./docfx/docfx.exe init -q -o 'docfx_project'
          New-Item -Path ./docfx_project -Name "templates" -ItemType "directory"
          Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/templates/*" -Destination "docfx_project/templates" -Force
          Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/docfx.json" -Destination "docfx_project/" -Force

          # Comb through RepoRoot/sdk and pick out Service names and Package Names
          $ServiceList = Get-ChildItem "$(Build.SourcesDirectory)/sdk" -Directory -Exclude eng, mgmtcommon, template | Sort-Object
          $YmlPath = "docfx_project/api"
          New-Item -Path $YmlPath -Name "toc.yml" -Force
          foreach ($Dir in $ServiceList)
          {
              New-Item -Path $YmlPath -Name "$($Dir.Name).md" -Force
              Write-Host "Write to Toc.yml"
              Add-Content -Path "$($YmlPath)/toc.yml" -Value "- name: $($Dir.Name.ToUpper())`r`n  href: $($Dir.Name).md"
              Write-Host "Write Client Header"
              $PkgList = Get-ChildItem $Dir.FullName -Directory -Exclude .vs, .vscode, Azure.Security.KeyVault.Shared | Where-Object -FilterScript {$_.Name -notmatch ".Management."}
              if (($PkgList | Measure-Object).count -eq 0)
              {
                  continue
              }
              Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "# CLIENT"
              Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "---"
              foreach ($Pkg in $PkgList)
              {
                  $ProjectName = Get-ChildItem "$($pkg.FullName)\src\*" -Include *.csproj
                  Write-Host "Write $($ProjectName.Name)"
                  Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "#### $($ProjectName.BaseName)"
              }
          }
          foreach ($Dir in $ServiceList)
          {
              Write-Host "Write Mgmt Header"
              $PkgList = Get-ChildItem $Dir.FullName -Directory | Where-Object -FilterScript {$_.Name -match ".Management."}
              if (($PkgList | Measure-Object).count -eq 0)
              {
                  continue
              }
              Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "# MANAGEMENT"
              Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "---"
              foreach ($Pkg in $PkgList)
              {
                  $ProjectName = Get-ChildItem "$($pkg.FullName)\src\*" -Include *.csproj
                  Write-Host "Write $($ProjectName.Name)"
                  Add-Content -Path "$($YmlPath)/$($Dir.Name).md" -Value "#### $($ProjectName.BaseName)"
              }
          }
          New-Item -Path "docfx_project" -Name "toc.yml" -Force
          Add-Content -Path "docfx_project/toc.yml" -Value "- name: Azure SDK for NET APIs`r`n  href: api/`r`n  homepage: api/index.md"
          Copy-Item "$(Build.SourcesDirectory)/README.md" -Destination "docfx_project/api/index.md" -Force
          Copy-Item "$(Build.SourcesDirectory)/CONTRIBUTING.md" -Destination "docfx_project/api/CONTRIBUTING.md" -Force

          # Build Doc Site
          ./docfx/docfx.exe build 'docfx_project/docfx.json'

          Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/assets/*" -Destination "docfx_project/_site/" -Force
        workingDirectory: $(Build.SourcesDirectory)
        displayName: Build Doc Index Site
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'
      - template: eng/pipelines/templates/scripts/mashup-doc-index.yml@azure-sdk-tools
        parameters:
          SourceDirectory: $(Build.SourcesDirectory)
      - task: CopyFiles@2
        displayName: Copy HTML to Artifacts Directory
        inputs:
          sourceFolder: $(Build.SourcesDirectory)/docfx_project/
          content: '**\*'
          targetFolder: $(Build.ArtifactStagingDirectory)/docfx_project
          overWrite: true
      - task: PublishPipelineArtifact@0
        condition: succeeded()
        inputs:
          artifactName: "Doc.Index"
          targetPath: $(Build.ArtifactStagingDirectory)/docfx_project/_site