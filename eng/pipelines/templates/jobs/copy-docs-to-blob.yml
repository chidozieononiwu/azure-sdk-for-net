jobs:
  - job: CopyDocsToBlob
    variables:
      - template: ../variables/globals.yml
    pool:
      vmImage: windows-2019
    steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Pipeline Artifact'
        inputs:
          buildType: specific
          project: $(TargetPipelineProjectId)
          definition: $(TargetPipelineDefinition)
          buildVersionToDownload: latestFromBranch
          branchName: refs/heads/$(TargetPipelineBranch)
      - pwsh: ls
        workingDirectory: $(Pipeline.Workspace)
        displayName: View Downloaded Artifacts
      - pwsh: |
          Invoke-WebRequest -MaximumRetryCount 10 -Uri "https://aka.ms/downloadazcopy-v10-windows" `
          -OutFile "azcopy.zip" | Wait-Process; Expand-Archive -Path "azcopy.zip" -DestinationPath "./azcopy/"
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Download and Extract azcopy Zip
      - pwsh: ls
        workingDirectory: $(Build.BinariesDirectory)/azcopy
        displayName: View Content of Azcopy
      - pwsh: |
          $DownloadedPkgs = Get-ChildItem "$(Pipeline.Workspace)/packages" | Where-Object -FilterScript {$_.Name.EndsWith(".nupkg")}
          $DownloadedDocs = Get-ChildItem "$(Pipeline.Workspace)" | Where-Object -FilterScript {$_.Name.StartsWith("Docs.")}
          $BlobBaseDir = 'https://azuresdkdocsdev.blob.core.windows.net/$web/dotnet'

          foreach ($Item in $DownloadedDocs) {
              $PkgName = $Item.Name.Remove(0, 5)
              $PkgFullName = $DownloadedPkgs | Where-Object -FilterScript {$_.Name -match "$($PkgName).\d"}
              if (($PkgFullName | Measure-Object).count -eq 1) 
              {
                  $PkgVersion = $PkgFullName[0].BaseName.Remove(0, $PkgName.Length + 1)
                  Write-Host "Uploading Doc for $($PkgName) Version:- $($PkgVersion)..."

                  New-Item "$(Build.BinariesDirectory)/versionplaceholder.txt" -Force

                  Write-Host "I got to here"

                  $AzCopy = "$(Build.BinariesDirectory)/azcopy/azcopy_windows_amd64_10.3.0/azcopy.exe"

                  $PkgDocName = $Item.Name

                  & $($AzCopy) cp "$(Pipeline.Workspace)/$($PkgDocName)/**" "$($BlobBaseDir)/$($PkgName)/$($PkgVersion)$(SAS)" --recursive=true
                  & $($AzCopy) cp "$(Build.BinariesDirectory)/versionplaceholder.txt" "$($BlobBaseDir)/$($PkgName)/versions/$($PkgVersion)$(SAS)" --recursive=true
                  Write-Host "$($PkgDocName) Uploaded"
              }
              else
              {
                  Write-Host "Package with the same name Exists. Upload Skipped"
                  continue
              }
          }
        displayName: Copy Docs to Blob
        continueOnError: false