{
  "api/Azure.Identity.SharedTokenCacheCredential.html": {
    "href": "api/Azure.Identity.SharedTokenCacheCredential.html",
    "title": "Class SharedTokenCacheCredential | Azure SDK for Net",
    "keywords": "Class SharedTokenCacheCredential Authenticates using tokens in the local cache shared between Microsoft applications. Inheritance Object Azure.Core.TokenCredential SharedTokenCacheCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class SharedTokenCacheCredential : TokenCredential Constructors SharedTokenCacheCredential(String, String) Creates a new SharedTokenCacheCredential which will authenticate users with the specified application. Declaration public SharedTokenCacheCredential(string clientId, string username) Parameters String clientId The client id of the application to which the users will authenticate String username The username (typically an email address) of the user to authenticate, this is required because the local cache may contain tokens for multiple identities SharedTokenCacheCredential(String, String, SharedTokenCacheCredentialOptions) Creates a new SharedTokenCacheCredential with the specifeid options, which will authenticate users with the specified application. Declaration public SharedTokenCacheCredential(string clientId, string username, SharedTokenCacheCredentialOptions options) Parameters String clientId The client id of the application to which the users will authenticate String username The username of the user to authenticate SharedTokenCacheCredentialOptions options The client options for the newly created SharedTokenCacheCredential Methods GetToken(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken token for a user account silently if the user has already authenticated to another Microsoft application participating in SSO through the MSAL cache Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken token for a user account silently if the user has already authenticated to another Microsoft application participating in SSO through the MSAL cache Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.IdentityClientOptions.html": {
    "href": "api/Azure.Identity.IdentityClientOptions.html",
    "title": "Class IdentityClientOptions | Azure SDK for Net",
    "keywords": "Class IdentityClientOptions Options to configure requests made to Azure Identity Services Inheritance Object Azure.Core.Pipeline.ClientOptions IdentityClientOptions Inherited Members Azure.Core.Pipeline.ClientOptions.Transport Azure.Core.Pipeline.ClientOptions.Diagnostics Azure.Core.Pipeline.ClientOptions.Retry Azure.Core.Pipeline.ClientOptions.AddPolicy(Azure.Core.Pipeline.HttpPipelinePolicy, Azure.Core.Pipeline.HttpPipelinePosition) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class IdentityClientOptions : ClientOptions Constructors IdentityClientOptions() Creates an instance of IdentityClientOptions with default settings. Declaration public IdentityClientOptions() Properties AuthorityHost The host of the Azure Active Directory authority. The default is https://login.microsoft.com Declaration public Uri AuthorityHost { get; set; } Property Value Uri"
  },
  "api/Azure.Identity.DefaultAzureCredential.html": {
    "href": "api/Azure.Identity.DefaultAzureCredential.html",
    "title": "Class DefaultAzureCredential | Azure SDK for Net",
    "keywords": "Class DefaultAzureCredential Provides a default ChainedTokenCredential configuration for applications that will be deployed to Azure. The following credential types will be tried, in order: EnvironmentCredential ManagedIdentityCredential SharedTokenCacheCredential Consult the documentation of these credential types for more information on how they attempt authentication. Inheritance Object Azure.Core.TokenCredential ChainedTokenCredential DefaultAzureCredential Inherited Members ChainedTokenCredential.GetToken(TokenRequest, CancellationToken) ChainedTokenCredential.GetTokenAsync(TokenRequest, CancellationToken) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class DefaultAzureCredential : ChainedTokenCredential Constructors DefaultAzureCredential() Creates an instance of the DefaultAzureCredential class. Declaration public DefaultAzureCredential()"
  },
  "api/Azure.Identity.ClientSecretCredential.html": {
    "href": "api/Azure.Identity.ClientSecretCredential.html",
    "title": "Class ClientSecretCredential | Azure SDK for Net",
    "keywords": "Class ClientSecretCredential Enables authentication to Azure Active Directory using a client secret that was generated for an App Registration. More information on how to configure a client secret can be found here: https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application Inheritance Object Azure.Core.TokenCredential ClientSecretCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class ClientSecretCredential : TokenCredential Constructors ClientSecretCredential(String, String, String) Creates an instance of the ClientSecretCredential with the details needed to authenticate against Azure Active Directory with a client secret. Declaration public ClientSecretCredential(string tenantId, string clientId, string clientSecret) Parameters String tenantId The Azure Active Directory tenant (directory) Id of the service principal. String clientId The client (application) ID of the service principal String clientSecret A client secret that was generated for the App Registration used to authenticate the client. ClientSecretCredential(String, String, String, IdentityClientOptions) Creates an instance of the ClientSecretCredential with the details needed to authenticate against Azure Active Directory with a client secret. Declaration public ClientSecretCredential(string tenantId, string clientId, string clientSecret, IdentityClientOptions options) Parameters String tenantId The Azure Active Directory tenant (directory) Id of the service principal. String clientId The client (application) ID of the service principal String clientSecret A client secret that was generated for the App Registration used to authenticate the client. IdentityClientOptions options Options that allow to configure the management of the requests sent to the Azure Active Directory service. Properties ClientId Gets the client (application) ID of the service principal Declaration public string ClientId { get; } Property Value String ClientSecret Gets the client secret that was generated for the App Registration used to authenticate the client. Declaration public string ClientSecret { get; } Property Value String TenantId Gets the Azure Active Directory tenant (directory) Id of the service principal Declaration public string TenantId { get; } Property Value String Methods GetToken(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified client secret to authenticate. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified client secret to authenticate. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.SharedTokenCacheCredentialOptions.html": {
    "href": "api/Azure.Identity.SharedTokenCacheCredentialOptions.html",
    "title": "Class SharedTokenCacheCredentialOptions | Azure SDK for Net",
    "keywords": "Class SharedTokenCacheCredentialOptions Options to configure requests made to MSAL shared token cache Inheritance Object Azure.Core.Pipeline.ClientOptions SharedTokenCacheCredentialOptions Inherited Members Azure.Core.Pipeline.ClientOptions.Transport Azure.Core.Pipeline.ClientOptions.Diagnostics Azure.Core.Pipeline.ClientOptions.Retry Azure.Core.Pipeline.ClientOptions.AddPolicy(Azure.Core.Pipeline.HttpPipelinePolicy, Azure.Core.Pipeline.HttpPipelinePosition) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class SharedTokenCacheCredentialOptions : ClientOptions Properties CacheAccessRetryCount Total number of retry attempts to read the shared token cache Declaration public int CacheAccessRetryCount { get; set; } Property Value Int32 CacheAccessRetryDelay Millisecond delay between attempts to read the persisted token cache Declaration public TimeSpan CacheAccessRetryDelay { get; set; } Property Value TimeSpan CacheFilePath Path to the persisted token cache Declaration public string CacheFilePath { get; set; } Property Value String"
  },
  "api/Azure.Identity.InteractiveBrowserCredential.html": {
    "href": "api/Azure.Identity.InteractiveBrowserCredential.html",
    "title": "Class InteractiveBrowserCredential | Azure SDK for Net",
    "keywords": "Class InteractiveBrowserCredential A Azure.Core.TokenCredential implementation which launches the system default browser to interactively authenticate a user, and obtain an access token. The browser will only be launched to authenticate the user once, then will silently aquire access tokens through the users refresh token as long as it's valid. Inheritance Object Azure.Core.TokenCredential InteractiveBrowserCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class InteractiveBrowserCredential : TokenCredential Constructors InteractiveBrowserCredential(String) Creates a new InteractiveBrowserCredential which will authenticate users with the specified application. Declaration public InteractiveBrowserCredential(string clientId) Parameters String clientId The client id of the application to which the users will authenticate. InteractiveBrowserCredential(String, IdentityClientOptions) Creates a new InteractiveBrowserCredential with the specifeid options, which will authenticate users with the specified application. Declaration public InteractiveBrowserCredential(string clientId, IdentityClientOptions options) Parameters String clientId The client id of the application to which the users will authenticate IdentityClientOptions options The client options for the newly created DeviceCodeCredential Methods GetToken(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken token for a user account silently if the user has already authenticated, otherwise the default browser is launched to authenticate the user. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken token for a user account silently if the user has already authenticated, otherwise the default browser is launched to authenticate the user. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.ClientCertificateCredential.html": {
    "href": "api/Azure.Identity.ClientCertificateCredential.html",
    "title": "Class ClientCertificateCredential | Azure SDK for Net",
    "keywords": "Class ClientCertificateCredential Enables authentication of a service principal in to Azure Active Directory using a X509 certificate that is assigned to it's App Registration. More information on how to configure certificate authentication can be found here: https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad Inheritance Object Azure.Core.TokenCredential ClientCertificateCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class ClientCertificateCredential : TokenCredential Constructors ClientCertificateCredential(String, String, X509Certificate2) Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate. Declaration public ClientCertificateCredential(string tenantId, string clientId, X509Certificate2 clientCertificate) Parameters String tenantId The Azure Active Directory tenant (directory) Id of the service principal. String clientId The client (application) ID of the service principal X509Certificate2 clientCertificate The authentication X509 Certificate of the service principal ClientCertificateCredential(String, String, X509Certificate2, IdentityClientOptions) Creates an instance of the ClientCertificateCredential with the details needed to authenticate against Azure Active Directory with the specified certificate. Declaration public ClientCertificateCredential(string tenantId, string clientId, X509Certificate2 clientCertificate, IdentityClientOptions options) Parameters String tenantId The Azure Active Directory tenant (directory) Id of the service principal. String clientId The client (application) ID of the service principal X509Certificate2 clientCertificate The authentication X509 Certificate of the service principal IdentityClientOptions options Options that allow to configure the management of the requests sent to the Azure Active Directory service. Properties ClientCertificate Gets the authentication X509 Certificate of the service principal Declaration public X509Certificate2 ClientCertificate { get; } Property Value X509Certificate2 ClientId Gets the client (application) ID of the service principal Declaration public string ClientId { get; } Property Value String TenantId Gets the Azure Active Directory tenant (directory) Id of the service principal Declaration public string TenantId { get; } Property Value String Methods GetToken(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified X509 certificate to authenticate. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified X509 certificate to authenticate. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.AuthenticationFailedException.html": {
    "href": "api/Azure.Identity.AuthenticationFailedException.html",
    "title": "Class AuthenticationFailedException | Azure SDK for Net",
    "keywords": "Class AuthenticationFailedException An exception class raised for errors in authenticating client reqeusts. Inheritance Object Exception AuthenticationFailedException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class AuthenticationFailedException : Exception, ISerializable, _Exception Constructors AuthenticationFailedException(String) Creates a new AuthenticationFailedException with the specified message. Declaration public AuthenticationFailedException(string message) Parameters String message The message describing the authentication failure. AuthenticationFailedException(String, Exception) Creates a new AuthenticationFailedException with the specified message. Declaration public AuthenticationFailedException(string message, Exception innerException) Parameters String message The message describing the authentication failure. Exception innerException The exception underlying the authentication failure."
  },
  "api/Azure.Identity.ManagedIdentityCredential.html": {
    "href": "api/Azure.Identity.ManagedIdentityCredential.html",
    "title": "Class ManagedIdentityCredential | Azure SDK for Net",
    "keywords": "Class ManagedIdentityCredential Attempts authentication using a managed identity that has been assigned to the deployment environment.This authentication type works in Azure VMs, App Service and Azure Functions applications, as well as inside of Azure Cloud Shell. More information about configuring managed identities can be found here: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview Inheritance Object Azure.Core.TokenCredential ManagedIdentityCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class ManagedIdentityCredential : TokenCredential Constructors ManagedIdentityCredential(String, IdentityClientOptions) Creates an instance of the ManagedIdentityCredential capable of authenticating a resource with a managed identity. Declaration public ManagedIdentityCredential(string clientId = null, IdentityClientOptions options = null) Parameters String clientId The client id to authenticate for a user assigned managed identity. More information on user assigned managed identities cam be found here: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview#how-a-user-assigned-managed-identity-works-with-an-azure-vm IdentityClientOptions options Options that allow to configure the management of the requests sent to the Azure Active Directory service. Methods GetToken(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken from the Managed Identity service if available. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls, or a default Azure.Core.AccessToken if no managed identity is available. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains an Azure.Core.AccessToken from the Managed Identity service if available. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls, or a default Azure.Core.AccessToken if no managed identity is available. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.DeviceCodeInfo.html": {
    "href": "api/Azure.Identity.DeviceCodeInfo.html",
    "title": "Struct DeviceCodeInfo | Azure SDK for Net",
    "keywords": "Struct DeviceCodeInfo Details of the device code to present to a user to allow them to authenticate through the device code authentication flow. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public struct DeviceCodeInfo Properties ClientId Identifier of the client requesting device code. Declaration public string ClientId { get; } Property Value String DeviceCode Device code returned by the service Declaration public string DeviceCode { get; } Property Value String ExpiresOn Time when the device code will expire. Declaration public DateTimeOffset ExpiresOn { get; } Property Value DateTimeOffset Interval Polling interval time to check for completion of authentication flow. Declaration public long Interval { get; } Property Value Int64 Message User friendly text response that can be used for display purpose. Declaration public string Message { get; } Property Value String Scopes List of the scopes that would be held by token. Declaration public IReadOnlyCollection<string> Scopes { get; } Property Value IReadOnlyCollection < String > UserCode User code returned by the service Declaration public string UserCode { get; } Property Value String VerificationUrl Verification URL where the user must navigate to authenticate using the device code and credentials. Declaration public string VerificationUrl { get; } Property Value String"
  },
  "api/Azure.Identity.ChainedTokenCredential.html": {
    "href": "api/Azure.Identity.ChainedTokenCredential.html",
    "title": "Class ChainedTokenCredential | Azure SDK for Net",
    "keywords": "Class ChainedTokenCredential Provides a Azure.Core.TokenCredential implementation which chains multiple Azure.Core.TokenCredential implementations to be tried in order until one of the getToken methods returns a non-default Azure.Core.AccessToken . Inheritance Object Azure.Core.TokenCredential ChainedTokenCredential DefaultAzureCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class ChainedTokenCredential : TokenCredential Constructors ChainedTokenCredential(TokenCredential[]) Creates an instance with the specified Azure.Core.TokenCredential sources. Declaration public ChainedTokenCredential(params TokenCredential[] sources) Parameters Azure.Core.TokenCredential [] sources The ordered chain of Azure.Core.TokenCredential implementations to tried when calling GetToken(TokenRequest, CancellationToken) or GetTokenAsync(TokenRequest, CancellationToken) Methods GetToken(TokenRequest, CancellationToken) Sequencially calls Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) on all the specified sources, returning the first non default Azure.Core.AccessToken . Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken The first non default Azure.Core.AccessToken returned by the specified sources. If all credentials in the chain return default a default Azure.Core.AccessToken is returned. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Sequencially calls Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken) on all the specified sources, returning the first non default Azure.Core.AccessToken . Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > The first non default Azure.Core.AccessToken returned by the specified sources. If all credentials in the chain return default a default Azure.Core.AccessToken is returned. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Azure SDK for Net",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Azure SDK for Net",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Azure SDK for Net",
    "keywords": "Add your introductions here!"
  },
  "api/Azure.Identity.html": {
    "href": "api/Azure.Identity.html",
    "title": "Namespace Azure.Identity | Azure SDK for Net",
    "keywords": "Namespace Azure.Identity Classes AuthenticationFailedException An exception class raised for errors in authenticating client reqeusts. ChainedTokenCredential Provides a Azure.Core.TokenCredential implementation which chains multiple Azure.Core.TokenCredential implementations to be tried in order until one of the getToken methods returns a non-default Azure.Core.AccessToken . ClientCertificateCredential Enables authentication of a service principal in to Azure Active Directory using a X509 certificate that is assigned to it's App Registration. More information on how to configure certificate authentication can be found here: https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad ClientSecretCredential Enables authentication to Azure Active Directory using a client secret that was generated for an App Registration. More information on how to configure a client secret can be found here: https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application DefaultAzureCredential Provides a default ChainedTokenCredential configuration for applications that will be deployed to Azure. The following credential types will be tried, in order: EnvironmentCredential ManagedIdentityCredential SharedTokenCacheCredential Consult the documentation of these credential types for more information on how they attempt authentication. DeviceCodeCredential A Azure.Core.TokenCredential implementation which authenticates a user using the device code flow, and provides access tokens for that user account. For more information on the device code authentication flow see https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/wiki/Device-Code-Flow . EnvironmentCredential Enables authentication to Azure Active Directory using client secret details configured in the following environment variables: AZURE_TENANT_ID: The Azure Active Directory tenant(directory) ID. AZURE_CLIENT_ID: The client(application) ID of an App Registration in the tenant. AZURE_CLIENT_SECRET: A client secret that was generated for the App Registration. This credential ultimately uses a ClientSecretCredential to perform the authentication using these details. Please consult the documentation of that class for more details. IdentityClientOptions Options to configure requests made to Azure Identity Services InteractiveBrowserCredential A Azure.Core.TokenCredential implementation which launches the system default browser to interactively authenticate a user, and obtain an access token. The browser will only be launched to authenticate the user once, then will silently aquire access tokens through the users refresh token as long as it's valid. ManagedIdentityCredential Attempts authentication using a managed identity that has been assigned to the deployment environment.This authentication type works in Azure VMs, App Service and Azure Functions applications, as well as inside of Azure Cloud Shell. More information about configuring managed identities can be found here: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview SharedTokenCacheCredential Authenticates using tokens in the local cache shared between Microsoft applications. SharedTokenCacheCredentialOptions Options to configure requests made to MSAL shared token cache UsernamePasswordCredential Enables authentication to Azure Active Directory using a user's username and password. If the user has MFA enabled this credential will fail to get a token throwing an AuthenticationFailedException . Also, this credential requires a high degree of trust and is not recommended outside of prototyping when more secure credentials can be used. Structs DeviceCodeInfo Details of the device code to present to a user to allow them to authenticate through the device code authentication flow."
  },
  "api/Azure.Identity.EnvironmentCredential.html": {
    "href": "api/Azure.Identity.EnvironmentCredential.html",
    "title": "Class EnvironmentCredential | Azure SDK for Net",
    "keywords": "Class EnvironmentCredential Enables authentication to Azure Active Directory using client secret details configured in the following environment variables: AZURE_TENANT_ID: The Azure Active Directory tenant(directory) ID. AZURE_CLIENT_ID: The client(application) ID of an App Registration in the tenant. AZURE_CLIENT_SECRET: A client secret that was generated for the App Registration. This credential ultimately uses a ClientSecretCredential to perform the authentication using these details. Please consult the documentation of that class for more details. Inheritance Object Azure.Core.TokenCredential EnvironmentCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class EnvironmentCredential : TokenCredential Constructors EnvironmentCredential() Creates an instance of the EnvironmentCredential class and reads client secret details from environment variables. If the expected environment variables are not found at this time, the GetToken method will return the default Azure.Core.AccessToken when invoked. Declaration public EnvironmentCredential() EnvironmentCredential(IdentityClientOptions) Creates an instance of the EnvironmentCredential class and reads client secret details from environment variables. If the expected environment variables are not found at this time, the GetToken method will return the default Azure.Core.AccessToken when invoked. Declaration public EnvironmentCredential(IdentityClientOptions options) Parameters IdentityClientOptions options Options that allow to configure the management of the requests sent to the Azure Active Directory service. Methods GetToken(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified client details specified in the environment variables AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET to authenticate. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) Remarks If the environment variables AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET are not specified, the default Azure.Core.AccessToken GetTokenAsync(TokenRequest, CancellationToken) Obtains a token from the Azure Active Directory service, using the specified client details specified in the environment variables AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET to authenticate. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls, or a default Azure.Core.AccessToken . Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken) Remarks If the environment variables AZURE_TENANT_ID, AZURE_CLIENT_ID, and AZURE_CLIENT_SECRET are not specifeid, the default Azure.Core.AccessToken"
  },
  "api/Azure.Identity.DeviceCodeCredential.html": {
    "href": "api/Azure.Identity.DeviceCodeCredential.html",
    "title": "Class DeviceCodeCredential | Azure SDK for Net",
    "keywords": "Class DeviceCodeCredential A Azure.Core.TokenCredential implementation which authenticates a user using the device code flow, and provides access tokens for that user account. For more information on the device code authentication flow see https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/wiki/Device-Code-Flow . Inheritance Object Azure.Core.TokenCredential DeviceCodeCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class DeviceCodeCredential : TokenCredential Constructors DeviceCodeCredential() Protected constructor for mocking Declaration protected DeviceCodeCredential() DeviceCodeCredential(String, Func<DeviceCodeInfo, CancellationToken, Task>) Creates a new DeviceCodeCredential which will authenticate users with the specified application. Declaration public DeviceCodeCredential(string clientId, Func<DeviceCodeInfo, CancellationToken, Task> deviceCodeCallback) Parameters String clientId The client id of the application to which the users will authenticate. Func < DeviceCodeInfo , CancellationToken , Task > deviceCodeCallback The callback to be executed to display the device code to the user DeviceCodeCredential(String, Func<DeviceCodeInfo, CancellationToken, Task>, IdentityClientOptions) Creates a new DeviceCodeCredential with the specifeid options, which will authenticate users with the specified application. Declaration public DeviceCodeCredential(string clientId, Func<DeviceCodeInfo, CancellationToken, Task> deviceCodeCallback, IdentityClientOptions options) Parameters String clientId The client id of the application to which the users will authenticate Func < DeviceCodeInfo , CancellationToken , Task > deviceCodeCallback The callback to be executed to display the device code to the user IdentityClientOptions options The client options for the newly created DeviceCodeCredential Methods GetToken(TokenRequest, CancellationToken) Obtains a token for a user account, authenticating them through the device code authentication flow. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains a token for a user account, authenticating them through the device code authentication flow. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  },
  "api/Azure.Identity.UsernamePasswordCredential.html": {
    "href": "api/Azure.Identity.UsernamePasswordCredential.html",
    "title": "Class UsernamePasswordCredential | Azure SDK for Net",
    "keywords": "Class UsernamePasswordCredential Enables authentication to Azure Active Directory using a user's username and password. If the user has MFA enabled this credential will fail to get a token throwing an AuthenticationFailedException . Also, this credential requires a high degree of trust and is not recommended outside of prototyping when more secure credentials can be used. Inheritance Object Azure.Core.TokenCredential UsernamePasswordCredential Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Identity.dll Syntax public class UsernamePasswordCredential : TokenCredential Constructors UsernamePasswordCredential() Protected constructor for mocking Declaration protected UsernamePasswordCredential() UsernamePasswordCredential(String, SecureString, String, String) Creates an instance of the UsernamePasswordCredential with the details needed to authenticate against Azure Active Directory with a simple username and password. Declaration public UsernamePasswordCredential(string username, SecureString password, string clientId, string tenantId) Parameters String username SecureString password The user account's user name, UPN. String clientId The client (application) ID of an App Registration in the tenant. String tenantId The Azure Active Directory tenant (directory) ID or name. UsernamePasswordCredential(String, SecureString, String, String, IdentityClientOptions) Creates an instance of the UsernamePasswordCredential with the details needed to authenticate against Azure Active Directory with a simple username and password. Declaration public UsernamePasswordCredential(string username, SecureString password, string clientId, string tenantId, IdentityClientOptions options) Parameters String username SecureString password The user account's user name, UPN. String clientId The client (application) ID of an App Registration in the tenant. String tenantId The Azure Active Directory tenant (directory) ID or name. IdentityClientOptions options The client options for the newly created UsernamePasswordCredential Methods GetToken(TokenRequest, CancellationToken) Obtains a token for a user account, authenticating them using the given username and password. Note: This will fail with an AuthenticationFailedException if the specified user acound has MFA enabled. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Azure.Core.AccessToken An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetToken(Azure.Core.TokenRequest, System.Threading.CancellationToken) GetTokenAsync(TokenRequest, CancellationToken) Obtains a token for a user account, authenticating them using the given username and password. Note: This will fail with an AuthenticationFailedException if the specified user acound has MFA enabled. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken = default(CancellationToken)) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken A CancellationToken controlling the request lifetime. Returns Task < Azure.Core.AccessToken > An Azure.Core.AccessToken which can be used to authenticate service client calls. Overrides Azure.Core.TokenCredential.GetTokenAsync(Azure.Core.TokenRequest, System.Threading.CancellationToken)"
  }
}