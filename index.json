{
  "api/Azure.Messaging.EventHubs.Processor.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.html",
    "title": "Namespace Azure.Messaging.EventHubs.Processor | Azure SDK for Net",
    "keywords": "Namespace Azure.Messaging.EventHubs.Processor Classes BasePartitionProcessor Processes events received from the Azure Event Hubs service. An instance of this class or of a derived class will be created by the associated EventProcessor<T> for every partition it owns. This class does not perform any kind of processing by itself and a useful partition processor is expected to be derived from it. Checkpoint Contains the information to reflect the state of event processing for a given Event Hub partition. EventProcessor<T> Receives EventData as they are available for a partition, in the context of a consumer group, and routes them to a partition processor instance to be processed. EventProcessorOptions The baseline set of options that can be specified when creating a EventProcessor<T> to configure its behavior. InMemoryPartitionManager A volatile in-memory storage service that keeps track of checkpoints and ownership. PartitionContext Contains information about a partition that a partition processor will be processing events from. It's also responsible for the creation of checkpoints. The interaction with the chosen storage service is done via PartitionManager . PartitionManager Deals with the interaction with the chosen storage service. It's able to create checkpoints and list/claim ownership. PartitionOwnership Contains all the information needed to describe the status of the owner of a partition. It's used by PartitionManager to claim ownership of a partition and to list existing ownership. Enums PartitionProcessorCloseReason The reason for closing a partition processor."
  },
  "api/Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.PartitionProcessorCloseReason.html",
    "title": "Enum PartitionProcessorCloseReason | Azure SDK for Net",
    "keywords": "Enum PartitionProcessorCloseReason The reason for closing a partition processor. Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public enum PartitionProcessorCloseReason : int EventHubException A non-retriable exception was thrown by the Event Hub Client. OwnershipLost The ownership of the associated partition was lost. PartitionProcessorException A non-retriable exception was thrown by the provided partition processor. Shutdown A close request was fired by the user. Unknown An unknown circumstance forced the processor to close. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<PartitionProcessorCloseReason, TConfiguration>(TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.Checkpoint.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.Checkpoint.html",
    "title": "Class Checkpoint | Azure SDK for Net",
    "keywords": "Class Checkpoint Contains the information to reflect the state of event processing for a given Event Hub partition. Inheritance Object Checkpoint Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class Checkpoint : object Constructors Checkpoint(String, String, String, String, String, Int64, Int64) Initializes a new instance of the Checkpoint class. Declaration protected Checkpoint(string fullyQualifiedNamespace, string eventHubName, string consumerGroup, string ownerIdentifier, string partitionId, long offset, long sequenceNumber) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace this checkpoint is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub this checkpoint is associated with, relative to the Event Hubs namespace that contains it. String consumerGroup The name of the consumer group this checkpoint is associated with. String ownerIdentifier The identifier of the associated EventProcessor<T> instance. String partitionId The identifier of the Event Hub partition this checkpoint is associated with. Int64 offset The offset of the EventData this checkpoint is associated with. Int64 sequenceNumber The sequence number assigned to the EventData this checkpoint is associated with. Properties ConsumerGroup The name of the consumer group this checkpoint is associated with. Declaration public string ConsumerGroup { get; } Property Value String EventHubName The name of the specific Event Hub this checkpoint is associated with, relative to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String FullyQualifiedNamespace The fully qualified Event Hubs namespace this checkpoint is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . Declaration public string FullyQualifiedNamespace { get; } Property Value String Offset The offset of the EventData this checkpoint is associated with. Declaration public long Offset { get; } Property Value Int64 OwnerIdentifier The identifier of the associated EventProcessor<T> instance. Declaration public string OwnerIdentifier { get; } Property Value String PartitionId The identifier of the Event Hub partition this checkpoint is associated with. Declaration public string PartitionId { get; } Property Value String SequenceNumber The sequence number assigned to the EventData this checkpoint is associated with. Declaration public long SequenceNumber { get; } Property Value Int64 Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.BasePartitionProcessor.html",
    "title": "Class BasePartitionProcessor | Azure SDK for Net",
    "keywords": "Class BasePartitionProcessor Processes events received from the Azure Event Hubs service. An instance of this class or of a derived class will be created by the associated EventProcessor<T> for every partition it owns. This class does not perform any kind of processing by itself and a useful partition processor is expected to be derived from it. Inheritance Object BasePartitionProcessor Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public abstract class BasePartitionProcessor : object Methods CloseAsync(PartitionContext, PartitionProcessorCloseReason) Closes the partition processor. Declaration public virtual Task CloseAsync(PartitionContext partitionContext, PartitionProcessorCloseReason reason) Parameters PartitionContext partitionContext Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition. PartitionProcessorCloseReason reason The reason why the partition processor is being closed. Returns Task A task to be resolved on when the operation has completed. InitializeAsync(PartitionContext) Initializes the partition processor. Declaration public virtual Task InitializeAsync(PartitionContext partitionContext) Parameters PartitionContext partitionContext Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition. Returns Task A task to be resolved on when the operation has completed. ProcessErrorAsync(PartitionContext, Exception, CancellationToken) Processes an unexpected exception thrown while the associated EventProcessor<T> is running. Declaration public abstract Task ProcessErrorAsync(PartitionContext partitionContext, Exception exception, CancellationToken cancellationToken) Parameters PartitionContext partitionContext Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition. Exception exception The exception to be processed. CancellationToken cancellationToken A instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. ProcessEventsAsync(PartitionContext, IEnumerable<EventData>, CancellationToken) Processes a set of received EventData . Declaration public abstract Task ProcessEventsAsync(PartitionContext partitionContext, IEnumerable<EventData> events, CancellationToken cancellationToken) Parameters PartitionContext partitionContext Contains information about the partition from which events are sourced and provides a means of creating checkpoints for that partition. IEnumerable < EventData > events The received events to be processed. CancellationToken cancellationToken A instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubProducerOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubProducerOptions.html",
    "title": "Class EventHubProducerOptions | Azure SDK for Net",
    "keywords": "Class EventHubProducerOptions The set of options that can be specified when creating an EventHubProducer to configure its behavior. Inheritance Object EventHubProducerOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubProducerOptions : object Properties PartitionId The identifier of the Event Hub partition that the EventHubProducer will be bound to, limiting it to sending events to only that partition. If the identifier is not specified, the Event Hubs service will be responsible for routing events that are sent to an available partition. Declaration public string PartitionId { get; set; } Property Value String If the producer wishes the events to be automatically to partitions, null ; otherwise, the identifier of the desired partition. Remarks Allowing automatic routing of partitions is recommended when: - The sending of events needs to be highly available. - The event data should be evenly distributed among all available partitions. If no partition is specified, the following rules are used for automatically selecting one: 1) Distribute the events equally amongst all available partitions using a round-robin approach. 2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition. RetryOptions The set of options to use for determining whether a failed operation should be retried and, if so, the amount of time to wait between retry attempts. If not specified, the retry policy from the associated EventHubClient will be used. Declaration public RetryOptions RetryOptions { get; set; } Property Value RetryOptions Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubProducer.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubProducer.html",
    "title": "Class EventHubProducer | Azure SDK for Net",
    "keywords": "Class EventHubProducer A producer responsible for transmitting EventData to a specific Event Hub, grouped together in batches. Depending on the options specified at creation, the producer may be created to allow event data to be automatically routed to an available partition or specific to a partition. Inheritance Object EventHubProducer Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubProducer : IAsyncDisposable Remarks Allowing automatic routing of partitions is recommended when: - The sending of events needs to be highly available. - The event data should be evenly distributed among all available partitions. If no partition is specified, the following rules are used for automatically selecting one: 1) Distribute the events equally amongst all available partitions using a round-robin approach. 2) If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition. Constructors EventHubProducer() Initializes a new instance of the EventHubProducer class. Declaration protected EventHubProducer() Properties EventHubName The name of the Event Hub that the producer is connected to, specific to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String PartitionId The identifier of the Event Hub partition that the EventHubProducer is bound to, indicating that it will send events to only that partition. If the identifier was not specified at creation, the producer will allow the Event Hubs service to be responsible for routing events that are sent to an available partition. Declaration public string PartitionId { get; } Property Value String If null , the producer is not specific to a partition and events will be automatically routed; otherwise, the identifier of the partition events will be sent to. RetryPolicy The policy to use for determining retry behavior for when an operation fails. Declaration public EventHubRetryPolicy RetryPolicy { get; set; } Property Value EventHubRetryPolicy Methods Close(CancellationToken) Closes the producer. Declaration public virtual void Close(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. CloseAsync(CancellationToken) Closes the producer. Declaration public virtual Task CloseAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. CreateBatchAsync(BatchOptions, CancellationToken) Creates a size-constraint batch to which EventData may be added using a try-based pattern. If an event would exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its return value. Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when attempting to send the events to the Event Hubs service. Declaration public virtual ValueTask<EventDataBatch> CreateBatchAsync(BatchOptions options, CancellationToken cancellationToken = null) Parameters BatchOptions options The set of options to consider when creating this batch. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns ValueTask < EventDataBatch > An EventDataBatch with the requested options . See Also CreateBatchAsync(BatchOptions, CancellationToken) CreateBatchAsync(CancellationToken) Creates a size-constraint batch to which EventData may be added using a try-based pattern. If an event would exceed the maximum allowable size of the batch, the batch will not allow adding the event and signal that scenario using its return value. Because events that would violate the size constraint cannot be added, publishing a batch will not trigger an exception when attempting to send the events to the Event Hubs service. Declaration public virtual ValueTask<EventDataBatch> CreateBatchAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns ValueTask < EventDataBatch > An EventDataBatch with the default batch options. See Also CreateBatchAsync(BatchOptions, CancellationToken) DisposeAsync() Performs the task needed to clean up resources used by the EventHubClient , including ensuring that the client itself has been closed. Declaration public virtual ValueTask DisposeAsync() Returns ValueTask A task to be resolved on when the operation has completed. Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. SendAsync(EventData, SendOptions, CancellationToken) Sends an event to the associated Event Hub using a batched approach. If the size of the event exceeds the maximum size of a single batch, an exception will be triggered and the send will fail. Declaration public virtual Task SendAsync(EventData eventData, SendOptions options, CancellationToken cancellationToken = null) Parameters EventData eventData The event data to send. SendOptions options The set of options to consider when sending this batch. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. See Also SendAsync(EventData, CancellationToken) SendAsync(IEnumerable<EventData>, CancellationToken) SendAsync(IEnumerable<EventData>, SendOptions, CancellationToken) SendAsync(EventDataBatch, CancellationToken) SendAsync(EventData, CancellationToken) Sends an event to the associated Event Hub using a batched approach. If the size of the event exceeds the maximum size of a single batch, an exception will be triggered and the send will fail. Declaration public virtual Task SendAsync(EventData eventData, CancellationToken cancellationToken = null) Parameters EventData eventData The event data to send. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. See Also SendAsync(EventData, SendOptions, CancellationToken) SendAsync(IEnumerable<EventData>, CancellationToken) SendAsync(IEnumerable<EventData>, SendOptions, CancellationToken) SendAsync(EventDataBatch, CancellationToken) SendAsync(EventDataBatch, CancellationToken) Sends a set of events to the associated Event Hub using a batched approach. Declaration public virtual Task SendAsync(EventDataBatch eventBatch, CancellationToken cancellationToken = null) Parameters EventDataBatch eventBatch The set of event data to send. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. See Also SendAsync(EventData, CancellationToken) SendAsync(EventData, SendOptions, CancellationToken) SendAsync(IEnumerable<EventData>, CancellationToken) SendAsync(IEnumerable<EventData>, SendOptions, CancellationToken) SendAsync(IEnumerable<EventData>, SendOptions, CancellationToken) Sends a set of events to the associated Event Hub using a batched approach. If the size of events exceed the maximum size of a single batch, an exception will be triggered and the send will fail. Declaration public virtual Task SendAsync(IEnumerable<EventData> events, SendOptions options, CancellationToken cancellationToken = null) Parameters IEnumerable < EventData > events The set of event data to send. SendOptions options The set of options to consider when sending this batch. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. See Also SendAsync(EventData, CancellationToken) SendAsync(EventData, SendOptions, CancellationToken) SendAsync(IEnumerable<EventData>, CancellationToken) SendAsync(EventDataBatch, CancellationToken) SendAsync(IEnumerable<EventData>, CancellationToken) Sends a set of events to the associated Event Hub using a batched approach. If the size of events exceed the maximum size of a single batch, an exception will be triggered and the send will fail. Declaration public virtual Task SendAsync(IEnumerable<EventData> events, CancellationToken cancellationToken = null) Parameters IEnumerable < EventData > events The set of event data to send. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. See Also SendAsync(IEnumerable<EventData>, SendOptions, CancellationToken) ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.html",
    "title": "Namespace Azure.Messaging.EventHubs.Errors | Azure SDK for Net",
    "keywords": "Namespace Azure.Messaging.EventHubs.Errors Classes ConsumerDisconnectedException An exception which occurs when an EventHubConsumer is forcefully disconnected from an Event Hub instance. This typically occurs when another consumer with higher OwnerLevel asserts ownership over the partition and consumer group. EventHubsCommunicationException An exception which occurs when there is a general communications error encountered when interacting with the Azure Event Hubs service. EventHubsException Serves as a basis for exceptions produced within the Event Hubs context. EventHubsResourceNotFoundException An exception which occurs when an Event Hubs resource, such as an Event Hub, consumer group, or partition cannot be found. EventHubsTimeoutException An exception which occurs when an operation or other request times out while interacting with the Azure Event Hubs service. MessageSizeExceededException An exception which occurs when a message is larger than the maximum size allowed for its transport. QuotaExceededException An exception which occurs when the quota applied to an Event Hubs resource has been exceeded while interacting with the Azure Event Hubs service. ServiceBusyException An exception which occurs when the Azure Event Hubs service reports that it is busy in response to a client request to perform an operation."
  },
  "api/Azure.Messaging.EventHubs.Errors.EventHubsException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.EventHubsException.html",
    "title": "Class EventHubsException | Azure SDK for Net",
    "keywords": "Class EventHubsException Serves as a basis for exceptions produced within the Event Hubs context. Inheritance Object EventHubsException ConsumerDisconnectedException EventHubsCommunicationException EventHubsResourceNotFoundException EventHubsTimeoutException MessageSizeExceededException QuotaExceededException ServiceBusyException Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubsException : Exception Properties IsTransient Indicates whether an exception should be considered transient or final. Declaration public bool IsTransient { get; } Property Value Boolean true if the exception is likely transient; otherwise, false . Message Gets a message that describes the current exception. Declaration public override string Message { get; } Property Value String ResourceName The name of the Event Hubs resource, such as an Event Hub, consumer group, or partition, to which the exception is associated. Declaration public string ResourceName { get; } Property Value String The name of the resource, if available; otherwise, null . Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.ConsumerDisconnectedException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.ConsumerDisconnectedException.html",
    "title": "Class ConsumerDisconnectedException | Azure SDK for Net",
    "keywords": "Class ConsumerDisconnectedException An exception which occurs when an EventHubConsumer is forcefully disconnected from an Event Hub instance. This typically occurs when another consumer with higher OwnerLevel asserts ownership over the partition and consumer group. Inheritance Object EventHubsException ConsumerDisconnectedException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class ConsumerDisconnectedException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubConsumerOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubConsumerOptions.html",
    "title": "Class EventHubConsumerOptions | Azure SDK for Net",
    "keywords": "Class EventHubConsumerOptions The baseline set of options that can be specified when creating a EventHubConsumer to configure its behavior. Inheritance Object EventHubConsumerOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubConsumerOptions : object Properties Identifier An optional text-based identifier label to assign to a consumer. Declaration public string Identifier { get; set; } Property Value String The identifier is used for informational purposes only. If not specified, the receiver will have no assigned identifier label. OwnerLevel When populated, the owner level indicates that a consumer is intended to be the only reader of events for the requested partition and an associated consumer group. To do so, this consumer will attempt to assert ownership over the partition; in the case where more than one exclusive consumer attempts to assert ownership for the same partition/consumer group pair, the one having a larger OwnerLevel value will \"win.\" When an exclusive consumer is used, other consumers which are non-exclusive or which have a lower owner level will either not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation. Declaration public long? OwnerLevel { get; set; } Property Value Nullable < Int64 > The relative priority to associate with an exclusive consumer; for a non-exclusive consumer, this value should be null . PrefetchCount The count used by the consumer to control the number of events this consumer will actively receive and queue locally without regard to whether a receive operation is currently active. Declaration public int PrefetchCount { get; set; } Property Value Int32 RetryOptions The set of options to use for determining whether a failed operation should be retried and, if so, the amount of time to wait between retry attempts. If not specified, the retry policy from the associated EventHubClient will be used. Declaration public RetryOptions RetryOptions { get; set; } Property Value RetryOptions TrackLastEnqueuedEventInformation Indicates whether or not the consumer should request information on the last enqueued event on its associated partition, and track that information as events are received. Declaration public bool TrackLastEnqueuedEventInformation { get; set; } Property Value Boolean true if information about the partition's last event should be requested and tracked; otherwise, false . Remarks When information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client. Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubConsumer.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubConsumer.html",
    "title": "Class EventHubConsumer | Azure SDK for Net",
    "keywords": "Class EventHubConsumer A consumer responsible for reading EventData from a specific Event Hub partition and as a member of a specific consumer group. A consumer may be exclusive, which asserts ownership over the partition for the consumer group to ensure that only one consumer from that group is reading the from the partition. These exclusive consumers are sometimes referred to as \"Epoch Consumers.\" A consumer may also be non-exclusive, allowing multiple consumers from the same consumer group to be actively reading events from the partition. These non-exclusive consumers are sometimes referred to as \"Non-Epoch Consumers.\" Inheritance Object EventHubConsumer Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubConsumer : IAsyncDisposable Constructors EventHubConsumer() Initializes a new instance of the EventHubConsumer class. Declaration protected EventHubConsumer() Fields DefaultConsumerGroupName The name of the default consumer group in the Event Hubs service. Declaration public const string DefaultConsumerGroupName = null Field Value String Properties ConsumerGroup The name of the consumer group that this consumer is associated with. Events will be read only in the context of this group. Declaration public string ConsumerGroup { get; } Property Value String EventHubName The name of the Event Hub that the consumer is connected to, specific to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String Identifier The text-based identifier label that has optionally been assigned to the consumer. Declaration public string Identifier { get; } Property Value String LastEnqueuedEventInformation A set of information about the last enqueued event of a partition, as observed by the consumer as events are received from the Event Hubs service. Declaration public LastEnqueuedEventProperties LastEnqueuedEventInformation { get; } Property Value LastEnqueuedEventProperties null , if the information was not requested by setting TrackLastEnqueuedEventInformation ; otherwise, the properties describing the most recently enqueued event in the partition. Remarks When information about the partition's last enqueued event is being tracked, each event received from the Event Hubs service will carry metadata about the partition that it otherwise would not. This results in a small amount of additional network bandwidth consumption that is generally a favorable trade-off when considered against periodically making requests for partition properties using the Event Hub client. OwnerLevel When populated, the priority indicates that a consumer is intended to be the only reader of events for the requested partition and an associated consumer group. To do so, this consumer will attempt to assert ownership over the partition; in the case where more than one exclusive consumer attempts to assert ownership for the same partition/consumer group pair, the one having a larger ownership level value will \"win.\" When an exclusive consumer is used, those consumers which are not exclusive or which have a lower owner level will either not be allowed to be created, if they already exist, will encounter an exception during the next attempted operation. Declaration public long? OwnerLevel { get; } Property Value Nullable < Int64 > The priority to associated with an exclusive consumer; for a non-exclusive consumer, this value will be null . PartitionId The identifier of the Event Hub partition that this consumer is associated with. Events will be read only from this partition. Declaration public string PartitionId { get; } Property Value String RetryPolicy The policy to use for determining retry behavior for when an operation fails. Declaration public EventHubRetryPolicy RetryPolicy { get; set; } Property Value EventHubRetryPolicy StartingPosition The position of the event in the partition where the consumer should begin reading. Declaration public EventPosition StartingPosition { get; } Property Value EventPosition Methods Close(CancellationToken) Closes the consumer. Declaration public virtual void Close(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. CloseAsync(CancellationToken) Closes the consumer. Declaration public virtual Task CloseAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. DisposeAsync() Performs the task needed to clean up resources used by the EventHubClient , including ensuring that the client itself has been closed. Declaration public virtual ValueTask DisposeAsync() Returns ValueTask A task to be resolved on when the operation has completed. Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ReceiveAsync(Int32, Nullable<TimeSpan>, CancellationToken) Receives a batch of EventData from the Event Hub partition. Declaration public virtual Task<IEnumerable<EventData>> ReceiveAsync(int maximumMessageCount, TimeSpan? maximumWaitTime = null, CancellationToken cancellationToken = null) Parameters Int32 maximumMessageCount The maximum number of messages to receive in this batch. Nullable < TimeSpan > maximumWaitTime The maximum amount of time to wait to build up the requested message count for the batch; if not specified, the default wait time specified when the consumer was created will be used. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task < IEnumerable < EventData >> The batch of EventData from the Event Hub partition this consumer is associated with. If no events are present, an empty enumerable is returned. SubscribeToEvents(CancellationToken) Subscribes to events for the associated partition in the form of an asynchronous enumerable that sends events as they become available on the partition, waiting as necessary should there be no events available. This version of the enumerator may block for an indeterminate amount of time for an await if events are not available on the partition, requiring cancellation via the cancellationToken to be requested in order to return control. It is recommended to call the overload which accepts a maximum wait time for scenarios where a more deterministic wait period is desired. Declaration public virtual IAsyncEnumerable<EventData> SubscribeToEvents(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns IAsyncEnumerable < EventData > An to be used for iterating over events in the partition. Remarks Unlike calls to ReceiveAsync(Int32, Nullable<TimeSpan>, CancellationToken) , each subscriber to events is presented with an independent iterator; if there are multiple subscribers, they will each receive their own copy of an event to process, rather than competing for them. Subscriptions will still compete with ReceiveAsync(Int32, Nullable<TimeSpan>, CancellationToken) calls, however. It is recommended that consumers either subscribe to events or explicitly receive batches, but do not use both approaches concurrently. See Also SubscribeToEvents(Nullable<TimeSpan>, CancellationToken) SubscribeToEvents(Nullable<TimeSpan>, CancellationToken) Subscribes to events for the associated partition in the form of an asynchronous enumerable that sends events as they become available on the partition, waiting as necessary should there be no events available. If the maximumWaitTime is passed, if no events were available before the wait time elapsed, an empty item will be sent in the enumerable in order to return control and ensure that await calls do not block for an indeterminate length of time. Declaration public virtual IAsyncEnumerable<EventData> SubscribeToEvents(TimeSpan? maximumWaitTime, CancellationToken cancellationToken = null) Parameters Nullable < TimeSpan > maximumWaitTime The maximum amount of time to wait to for an event to be available before emitting an empty item; if null , empty items will not be published. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns IAsyncEnumerable < EventData > An to be used for iterating over events in the partition. Remarks Unlike calls to ReceiveAsync(Int32, Nullable<TimeSpan>, CancellationToken) , each subscriber to events is presented with an independent iterator; if there are multiple subscribers, they will each receive their own copy of an event to process, rather than competing for them. Subscriptions will still compete with ReceiveAsync(Int32, Nullable<TimeSpan>, CancellationToken) calls, however. It is recommended that consumers either subscribe to events or explicitly receive batches, but do not use both approaches concurrently. See Also SubscribeToEvents(CancellationToken) ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubClient.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubClient.html",
    "title": "Class EventHubClient | Azure SDK for Net",
    "keywords": "Class EventHubClient The main point of interaction with the Azure Event Hubs service, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub. Inheritance Object EventHubClient Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubClient : IAsyncDisposable Constructors EventHubClient() Initializes a new instance of the EventHubClient class. Declaration protected EventHubClient() EventHubClient(EventHubClientOptions) Initializes a new instance of the EventHubClient class. Declaration protected EventHubClient(EventHubClientOptions clientOptions) Parameters EventHubClientOptions clientOptions A set of options to apply when configuring the client. Remarks Because this is a non-public constructor, it is assumed that the clientOptions passed are owned by this instance and are safe from changes made by consumers. It is considered the responsibility of the caller to ensure that any needed cloning of options is performed. EventHubClient(String) Initializes a new instance of the EventHubClient class. Declaration public EventHubClient(string connectionString) Parameters String connectionString The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and the shared key properties are contained in this connection string. Remarks If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed. In this case, the name can be added manually by adding \";EntityPath=[[ EVENT HUB NAME ]]\" to the end of the connection string. For example, \";EntityPath=telemetry-hub\". If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name. EventHubClient(String, EventHubClientOptions) Initializes a new instance of the EventHubClient class. Declaration public EventHubClient(string connectionString, EventHubClientOptions clientOptions) Parameters String connectionString The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and SAS token are contained in this connection string. EventHubClientOptions clientOptions A set of options to apply when configuring the client. Remarks If the connection string is copied from the Event Hubs namespace, it will likely not contain the name of the desired Event Hub, which is needed. In this case, the name can be added manually by adding \";EntityPath=[[ EVENT HUB NAME ]]\" to the end of the connection string. For example, \";EntityPath=telemetry-hub\". If you have defined a shared access policy directly on the Event Hub itself, then copying the connection string from that Event Hub will result in a connection string that contains the name. EventHubClient(String, String) Initializes a new instance of the EventHubClient class. Declaration public EventHubClient(string connectionString, string eventHubName) Parameters String connectionString The connection string to use for connecting to the Event Hubs namespace; it is expected that the shared key properties are contained in this connection string, but not the Event Hub name. String eventHubName The name of the specific Event Hub to connect the client to. Remarks If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the eventHubName . The name of the Event Hub should be passed only once, either as part of the connection string or separately. EventHubClient(String, String, TokenCredential, EventHubClientOptions) Initializes a new instance of the EventHubClient class. Declaration public EventHubClient(string fullyQualifiedNamespace, string eventHubName, TokenCredential credential, EventHubClientOptions clientOptions = null) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub to connect the client to. Azure.Core.TokenCredential credential The Azure managed identity credential to use for authorization. Access controls may be specified by the Event Hubs namespace or the requested Event Hub, depending on Azure configuration. EventHubClientOptions clientOptions A set of options to apply when configuring the client. EventHubClient(String, String, EventHubClientOptions) Initializes a new instance of the EventHubClient class. Declaration public EventHubClient(string connectionString, string eventHubName, EventHubClientOptions clientOptions) Parameters String connectionString The connection string to use for connecting to the Event Hubs namespace; it is expected that the Event Hub name and SAS token are contained in this connection string. String eventHubName The name of the specific Event Hub to connect the client to. EventHubClientOptions clientOptions A set of options to apply when configuring the client. Remarks If the connection string is copied from the Event Hub itself, it will contain the name of the desired Event Hub, and can be used directly without passing the eventHubName . The name of the Event Hub should be passed only once, either as part of the connection string or separately. Properties EventHubName The name of the Event Hub that the client is connected to, specific to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String FullyQualifiedNamespace The fully qualified Event Hubs namespace that the client is connected to. This is likely to be similar to {yournamespace}.servicebus.windows.net . Declaration public string FullyQualifiedNamespace { get; } Property Value String RetryPolicy The policy to use for determining retry behavior for when an operation fails. Declaration public EventHubRetryPolicy RetryPolicy { get; set; } Property Value EventHubRetryPolicy Methods Close(CancellationToken) Closes the connection to the Event Hub instance. Declaration public virtual void Close(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. CloseAsync(CancellationToken) Closes the connection to the Event Hub instance. Declaration public virtual Task CloseAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task A task to be resolved on when the operation has completed. CreateConsumer(String, String, EventPosition, EventHubConsumerOptions) Creates an Event Hub consumer responsible for reading EventData from a specific Event Hub partition, in the context of a specific consumer group. A consumer may be exclusive, which asserts ownership over the partition for the consumer group to ensure that only one consumer from that group is reading the from the partition. These exclusive consumers are sometimes referred to as \"Epoch Consumers.\" A consumer may also be non-exclusive, allowing multiple consumers from the same consumer group to be actively reading events from the partition. These non-exclusive consumers are sometimes referred to as \"Non-epoch Consumers.\" Designating a consumer as exclusive may be specified in the consumerOptions . By default, consumers are created as non-exclusive. Declaration public virtual EventHubConsumer CreateConsumer(string consumerGroup, string partitionId, EventPosition eventPosition, EventHubConsumerOptions consumerOptions = null) Parameters String consumerGroup The name of the consumer group this consumer is associated with. Events are read in the context of this group. String partitionId The identifier of the Event Hub partition from which events will be received. EventPosition eventPosition The position within the partition where the consumer should begin reading events. EventHubConsumerOptions consumerOptions The set of options to apply when creating the consumer. Returns EventHubConsumer An Event Hub consumer configured in the requested manner. CreateProducer(EventHubProducerOptions) Creates an Event Hub producer responsible for publishing EventData to the Event Hub, either as a single item or grouped together in batches. Depending on the producerOptions specified, the producer may be created to allow event data to be automatically routed to an available partition or specific to a partition. Declaration public virtual EventHubProducer CreateProducer(EventHubProducerOptions producerOptions = null) Parameters EventHubProducerOptions producerOptions The set of options to apply when creating the producer. Returns EventHubProducer An Event Hub producer configured in the requested manner. Remarks Allowing automatic routing of partitions is recommended when: - The publishing of events needs to be highly available. - The event data should be evenly distributed among all available partitions. If no partition is specified, the following rules are used for automatically selecting one: - Distribute the events equally amongst all available partitions using a round-robin approach. - If a partition becomes unavailable, the Event Hubs service will automatically detect it and forward the message to another available partition. DisposeAsync() Performs the task needed to clean up resources used by the EventHubClient , including ensuring that the client itself has been closed. Declaration public virtual ValueTask DisposeAsync() Returns ValueTask A task to be resolved on when the operation has completed. Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetPartitionIdsAsync(CancellationToken) Retrieves the set of identifiers for the partitions of an Event Hub. Declaration public virtual Task<string[]> GetPartitionIdsAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task < String []> The set of identifiers for the partitions within the Event Hub that this client is associated with. Remarks This method is synonymous with invoking GetPropertiesAsync(CancellationToken) and reading the PartitionIds property that is returned. It is offered as a convenience for quick access to the set of partition identifiers for the associated Event Hub. No new or extended information is presented. GetPartitionPropertiesAsync(String, CancellationToken) Retrieves information about a specific partition for an Event Hub, including elements that describe the available events in the partition event stream. Declaration public virtual Task<PartitionProperties> GetPartitionPropertiesAsync(string partitionId, CancellationToken cancellationToken = null) Parameters String partitionId The unique identifier of a partition associated with the Event Hub. CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task < PartitionProperties > The set of information for the requested partition under the Event Hub this client is associated with. GetPropertiesAsync(CancellationToken) Retrieves information about an Event Hub, including the number of partitions present and their identifiers. Declaration public virtual Task<EventHubProperties> GetPropertiesAsync(CancellationToken cancellationToken = null) Parameters CancellationToken cancellationToken An optional instance to signal the request to cancel the operation. Returns Task < EventHubProperties > The set of information for the Event Hub that this client is associated with. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration) See Also https://docs.microsoft.com/en-us/Azure/event-hubs/event-hubs-about"
  },
  "api/Azure.Messaging.EventHubs.EventData.html": {
    "href": "api/Azure.Messaging.EventHubs.EventData.html",
    "title": "Class EventData | Azure SDK for Net",
    "keywords": "Class EventData A set of data encapsulating an event and the associated metadata for use with Event Hubs operations. Inheritance Object EventData Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventData : object Constructors EventData(ReadOnlyMemory<Byte>) Initializes a new instance of the EventData class. Declaration public EventData(ReadOnlyMemory<byte> eventBody) Parameters ReadOnlyMemory < Byte > eventBody The raw data to use as the body of the event. EventData(ReadOnlyMemory<Byte>, IDictionary<String, Object>, IReadOnlyDictionary<String, Object>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTimeOffset>, String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTimeOffset>) Initializes a new instance of the EventData class. Declaration protected EventData(ReadOnlyMemory<byte> eventBody, IDictionary<string, object> properties = null, IReadOnlyDictionary<string, object> systemProperties = null, long? sequenceNumber = null, long? offset = null, DateTimeOffset? enqueuedTime = null, string partitionKey = null, long? lastPartitionSequenceNumber = null, long? lastPartitionOffset = null, DateTimeOffset? lastPartitionEnqueuedTime = null) Parameters ReadOnlyMemory < Byte > eventBody The raw data to use as the body of the event. IDictionary < String , Object > properties The set of free-form event properties to send with the event. IReadOnlyDictionary < String , Object > systemProperties The set of system properties received from the Event Hubs service. Nullable < Int64 > sequenceNumber The sequence number assigned to the event when it was enqueued in the associated Event Hub partition. Nullable < Int64 > offset The offset of the event when it was received from the associated Event Hub partition. Nullable < DateTimeOffset > enqueuedTime The date and time, in UTC, of when the event was enqueued in the Event Hub partition. String partitionKey The partition hashing key applied to the batch that the associated EventData , was sent with. Nullable < Int64 > lastPartitionSequenceNumber The sequence number that was last enqueued into the Event Hub partition. Nullable < Int64 > lastPartitionOffset The offset that was last enqueued into the Event Hub partition. Nullable < DateTimeOffset > lastPartitionEnqueuedTime The date and time, in UTC, of the event that was last enqueued into the Event Hub partition. Properties Body The data associated with the event. Declaration public ReadOnlyMemory<byte> Body { get; } Property Value ReadOnlyMemory < Byte > Remarks If the means for deserializaing the raw data is not apparent to consumers, a common technique is to make use of Properties to associate serialization hints as an aid to consumers who wish to deserialize the binary data. See Also Properties EnqueuedTime The date and time, in UTC, of when the event was enqueued in the Event Hub partition. Declaration public DateTimeOffset? EnqueuedTime { get; } Property Value Nullable < DateTimeOffset > Remarks This property is only populated for events received from the Event Hubs service. LastPartitionEnqueuedTime The date and time, in UTC, that the last event was enqueued into the Event Hub partition from which this event was received. Declaration protected DateTimeOffset? LastPartitionEnqueuedTime { get; } Property Value Nullable < DateTimeOffset > Remarks This property is only populated for events received using an EventHubConsumer which was created when TrackLastEnqueuedEventInformation is enabled. LastPartitionOffset The offset of the event that was last enqueued into the Event Hub partition from which this event was received. Declaration protected long? LastPartitionOffset { get; } Property Value Nullable < Int64 > Remarks This property is only populated for events received using an EventHubConsumer which was created when TrackLastEnqueuedEventInformation is enabled. LastPartitionSequenceNumber The sequence number of the event that was last enqueued into the Event Hub partition from which this event was received. Declaration protected long? LastPartitionSequenceNumber { get; } Property Value Nullable < Int64 > Remarks This property is only populated for events received using an EventHubConsumer which was created when TrackLastEnqueuedEventInformation is enabled. Offset The offset of the event when it was received from the associated Event Hub partition. Declaration public long? Offset { get; } Property Value Nullable < Int64 > Remarks This property is only populated for events received from the Event Hubs service. PartitionKey The partition hashing key applied to the batch that the associated EventData , was published with. Declaration public string PartitionKey { get; } Property Value String Remarks This property is only populated for events received from the Event Hubs service. Properties The set of free-form event properties which may be used for passing metadata associated with the event with the event body during Event Hubs operations. Declaration public IDictionary<string, object> Properties { get; } Property Value IDictionary < String , Object > Remarks A common use case for Properties is to associate serialization hints for the Body as an aid to consumers who wish to deserialize the binary data. Examples var eventData = new EventData(serializedTelemetryData); eventData.Properties[\"eventType\"] = \"com.microsoft.Azure.monitoring.EtlEvent\"; SequenceNumber The sequence number assigned to the event when it was enqueued in the associated Event Hub partition. Declaration public long? SequenceNumber { get; } Property Value Nullable < Int64 > Remarks This property is only populated for events received from the Event Hubs service. SystemProperties The set of free-form event properties which were provided by the Event Hubs service to pass metadata associated with the event or associated Event Hubs operation. Declaration public IReadOnlyDictionary<string, object> SystemProperties { get; } Property Value IReadOnlyDictionary < String , Object > Remarks These properties are only populated for events received from the Event Hubs service. The set is otherwise empty. Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Microsoft.Extensions.Azure.html": {
    "href": "api/Microsoft.Extensions.Azure.html",
    "title": "Namespace Microsoft.Extensions.Azure | Azure SDK for Net",
    "keywords": "Namespace Microsoft.Extensions.Azure Classes AzureClientBuilderExtensions Extension methods to add EventHubClient client to clients builder"
  },
  "api/Microsoft.Extensions.Azure.AzureClientBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Azure.AzureClientBuilderExtensions.html",
    "title": "Class AzureClientBuilderExtensions | Azure SDK for Net",
    "keywords": "Class AzureClientBuilderExtensions Extension methods to add EventHubClient client to clients builder Inheritance Object AzureClientBuilderExtensions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public static class AzureClientBuilderExtensions : object Methods AddEventHubClient<TBuilder>(TBuilder, String) Registers a EventHubClient instance with the provided connectionString Declaration public static IAzureClientBuilder<EventHubClient, EventHubClientOptions> AddEventHubClient<TBuilder>(this TBuilder builder, string connectionString) where TBuilder : IAzureClientFactoryBuilder Parameters TBuilder builder String connectionString Returns Azure.Core.Extensions.IAzureClientBuilder < EventHubClient , EventHubClientOptions > Type Parameters TBuilder AddEventHubClient<TBuilder>(TBuilder, String, String) Registers a EventHubClient instance with the provided connectionString and eventHubName Declaration public static IAzureClientBuilder<EventHubClient, EventHubClientOptions> AddEventHubClient<TBuilder>(this TBuilder builder, string connectionString, string eventHubName) where TBuilder : IAzureClientFactoryBuilder Parameters TBuilder builder String connectionString String eventHubName Returns Azure.Core.Extensions.IAzureClientBuilder < EventHubClient , EventHubClientOptions > Type Parameters TBuilder AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration) Registers a EventHubClient instance with connection options loaded from the provided configuration instance. Declaration public static IAzureClientBuilder<EventHubClient, EventHubClientOptions> AddEventHubClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration) where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration> Parameters TBuilder builder TConfiguration configuration Returns Azure.Core.Extensions.IAzureClientBuilder < EventHubClient , EventHubClientOptions > Type Parameters TBuilder TConfiguration AddEventHubClientWithHost<TBuilder>(TBuilder, String, String) Registers a EventHubClient instance with the provided host and eventHubName Declaration public static IAzureClientBuilder<EventHubClient, EventHubClientOptions> AddEventHubClientWithHost<TBuilder>(this TBuilder builder, string host, string eventHubName) where TBuilder : IAzureClientFactoryBuilderWithCredential Parameters TBuilder builder String host String eventHubName Returns Azure.Core.Extensions.IAzureClientBuilder < EventHubClient , EventHubClientOptions > Type Parameters TBuilder"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Azure SDK for Net",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Azure SDK for Net",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Azure SDK for Net",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/TrackOne.TokenScope.html": {
    "href": "api/TrackOne.TokenScope.html",
    "title": "Enum TokenScope | Azure SDK for Net",
    "keywords": "Enum TokenScope A enum representing the scope of the TrackOne.SecurityToken . Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public enum TokenScope : int Entity The entity. Namespace The namespace. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TokenScope, TConfiguration>(TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.html": {
    "href": "api/Azure.Messaging.EventHubs.html",
    "title": "Namespace Azure.Messaging.EventHubs | Azure SDK for Net",
    "keywords": "Namespace Azure.Messaging.EventHubs Classes BatchOptions The set of options that can be specified to influence the way in which an event batch behaves and is sent to the Event Hubs service. EventData A set of data encapsulating an event and the associated metadata for use with Event Hubs operations. EventDataBatch A set of EventData with size constraints known up-front, intended to be sent to the Event Hubs service as a single batch. EventHubClient The main point of interaction with the Azure Event Hubs service, the client offers a connection to a specific Event Hub within the Event Hubs namespace and offers operations for sending event data, receiving events, and inspecting the connected Event Hub. EventHubClientOptions The set of options that can be specified when creating an EventHubClient to configure its behavior. EventHubConsumer A consumer responsible for reading EventData from a specific Event Hub partition and as a member of a specific consumer group. A consumer may be exclusive, which asserts ownership over the partition for the consumer group to ensure that only one consumer from that group is reading the from the partition. These exclusive consumers are sometimes referred to as \"Epoch Consumers.\" A consumer may also be non-exclusive, allowing multiple consumers from the same consumer group to be actively reading events from the partition. These non-exclusive consumers are sometimes referred to as \"Non-Epoch Consumers.\" EventHubConsumerOptions The baseline set of options that can be specified when creating a EventHubConsumer to configure its behavior. EventHubProducer A producer responsible for transmitting EventData to a specific Event Hub, grouped together in batches. Depending on the options specified at creation, the producer may be created to allow event data to be automatically routed to an available partition or specific to a partition. EventHubProducerOptions The set of options that can be specified when creating an EventHubProducer to configure its behavior. EventHubRetryPolicy An abstract representation of a policy to govern retrying of messaging operations. EventPosition The position of events in an Event Hub partition, typically used in the creation of an EventHubProducer . RetryOptions The set of options that can be specified to influence how retry attempts are made, and a failure is eligible to be retried. SendOptions The set of options that can be specified to influence the way in which events are sent to the Event Hubs service. Enums RetryMode The type of approach to apply when calculating the delay between retry attempts. TransportType Specifies the type of protocol and transport that will be used for communicating with Azure Event Hubs."
  },
  "api/Azure.Messaging.EventHubs.RetryOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.RetryOptions.html",
    "title": "Class RetryOptions | Azure SDK for Net",
    "keywords": "Class RetryOptions The set of options that can be specified to influence how retry attempts are made, and a failure is eligible to be retried. Inheritance Object RetryOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class RetryOptions : object Properties Delay The delay between retry attempts for a fixed approach or the delay on which to base calculations for a backoff-based approach. Declaration public TimeSpan Delay { get; set; } Property Value TimeSpan MaximumDelay The maximum permissible delay between retry attempts. Declaration public TimeSpan MaximumDelay { get; set; } Property Value TimeSpan MaximumRetries The maximum number of retry attempts before considering the associated operation to have failed. Declaration public int MaximumRetries { get; set; } Property Value Int32 Mode The approach to use for calculating retry delays. Declaration public RetryMode Mode { get; set; } Property Value RetryMode TryTimeout The maximum duration to wait for completion of a single attempt, whether the intial attempt or a retry. Declaration public TimeSpan TryTimeout { get; set; } Property Value TimeSpan Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.RetryMode.html": {
    "href": "api/Azure.Messaging.EventHubs.RetryMode.html",
    "title": "Enum RetryMode | Azure SDK for Net",
    "keywords": "Enum RetryMode The type of approach to apply when calculating the delay between retry attempts. Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public enum RetryMode : int Exponential Retry attempts will delay based on a back-off strategy, where each attempt will increase the duration that it waits before retrying. Fixed Retry attempts happen at fixed intervals; each delay is a consistent duration. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<RetryMode, TConfiguration>(TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.PartitionOwnership.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.PartitionOwnership.html",
    "title": "Class PartitionOwnership | Azure SDK for Net",
    "keywords": "Class PartitionOwnership Contains all the information needed to describe the status of the owner of a partition. It's used by PartitionManager to claim ownership of a partition and to list existing ownership. Inheritance Object PartitionOwnership Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class PartitionOwnership : object Constructors PartitionOwnership(String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTimeOffset>, String) Initializes a new instance of the PartitionOwnership class. Declaration protected PartitionOwnership(string fullyQualifiedNamespace, string eventHubName, string consumerGroup, string ownerIdentifier, string partitionId, long? offset = null, long? sequenceNumber = null, DateTimeOffset? lastModifiedTime = null, string eTag = null) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace this partition ownership is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub this partition ownership is associated with, relative to the Event Hubs namespace that contains it. String consumerGroup The name of the consumer group this partition ownership is associated with. String ownerIdentifier The identifier of the associated EventProcessor<T> instance. String partitionId The identifier of the Event Hub partition this partition ownership is associated with. Nullable < Int64 > offset The offset of the last EventData received by the associated partition processor. Nullable < Int64 > sequenceNumber The sequence number of the last EventData received by the associated partition processor. Nullable < DateTimeOffset > lastModifiedTime The date and time, in UTC, that the last update was made to this ownership. String eTag The entity tag needed to update this ownership. Properties ConsumerGroup The name of the consumer group this partition ownership is associated with. Declaration public string ConsumerGroup { get; } Property Value String ETag The entity tag needed to update this ownership. Declaration public string ETag { get; set; } Property Value String EventHubName The name of the specific Event Hub this partition ownership is associated with, relative to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String FullyQualifiedNamespace The fully qualified Event Hubs namespace this partition ownership is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . Declaration public string FullyQualifiedNamespace { get; } Property Value String LastModifiedTime The date and time, in UTC, that the last update was made to this ownership. Declaration public DateTimeOffset? LastModifiedTime { get; set; } Property Value Nullable < DateTimeOffset > Offset The offset of the last EventData received by the associated partition processor upon ownership update. Declaration public long? Offset { get; set; } Property Value Nullable < Int64 > OwnerIdentifier The identifier of the associated EventProcessor<T> instance. Declaration public string OwnerIdentifier { get; } Property Value String PartitionId The identifier of the Event Hub partition this partition ownership is associated with. Declaration public string PartitionId { get; } Property Value String SequenceNumber The sequence number of the last EventData received by the associated partition processor upon ownership update. Declaration public long? SequenceNumber { get; set; } Property Value Nullable < Int64 > Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.PartitionManager.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.PartitionManager.html",
    "title": "Class PartitionManager | Azure SDK for Net",
    "keywords": "Class PartitionManager Deals with the interaction with the chosen storage service. It's able to create checkpoints and list/claim ownership. Inheritance Object PartitionManager InMemoryPartitionManager Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public abstract class PartitionManager : object Remarks An instance of a concrete subclass is provided by the user in the EventProcessor<T> constructor. Methods ClaimOwnershipAsync(IEnumerable<PartitionOwnership>) Attempts to claim ownership of partitions for processing. Declaration public abstract Task<IEnumerable<PartitionOwnership>> ClaimOwnershipAsync(IEnumerable<PartitionOwnership> partitionOwnership) Parameters IEnumerable < PartitionOwnership > partitionOwnership An enumerable containing all the ownership to claim. Returns Task < IEnumerable < PartitionOwnership >> An enumerable containing the successfully claimed ownership instances. ListOwnershipAsync(String, String, String) Retrieves a complete ownership list from the chosen storage service. Declaration public abstract Task<IEnumerable<PartitionOwnership>> ListOwnershipAsync(string fullyQualifiedNamespace, string eventHubName, string consumerGroup) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace the ownership are associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub the ownership are associated with, relative to the Event Hubs namespace that contains it. String consumerGroup The name of the consumer group the ownership are associated with. Returns Task < IEnumerable < PartitionOwnership >> An enumerable containing all the existing ownership for the associated Event Hub and consumer group. UpdateCheckpointAsync(Checkpoint) Updates the checkpoint using the given information for the associated partition and consumer group in the chosen storage service. Declaration public abstract Task UpdateCheckpointAsync(Checkpoint checkpoint) Parameters Checkpoint checkpoint The checkpoint containing the information to be stored. Returns Task A task to be resolved on when the operation has completed. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.EventProcessorOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.EventProcessorOptions.html",
    "title": "Class EventProcessorOptions | Azure SDK for Net",
    "keywords": "Class EventProcessorOptions The baseline set of options that can be specified when creating a EventProcessor<T> to configure its behavior. Inheritance Object EventProcessorOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventProcessorOptions : object Properties InitialEventPosition The position within a partition where the partition processor should begin reading events. Declaration public EventPosition InitialEventPosition { get; set; } Property Value EventPosition MaximumMessageCount The maximum number of messages to receive in every receive attempt. Declaration public int MaximumMessageCount { get; set; } Property Value Int32 MaximumReceiveWaitTime The maximum amount of time to wait to build up the requested message count in every receive attempt. Declaration public TimeSpan? MaximumReceiveWaitTime { get; set; } Property Value Nullable < TimeSpan > Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.EventProcessor-1.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.EventProcessor-1.html",
    "title": "Class EventProcessor<T> | Azure SDK for Net",
    "keywords": "Class EventProcessor<T> Receives EventData as they are available for a partition, in the context of a consumer group, and routes them to a partition processor instance to be processed. Inheritance Object EventProcessor<T> Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventProcessor<T> : object where T : BasePartitionProcessor, new() Type Parameters T The type of partition processor used by this instance by default; the type must be derived from BasePartitionProcessor and must have a parameterless constructor. Constructors EventProcessor() Initializes a new instance of the EventProcessor<T> class. Declaration protected EventProcessor() EventProcessor(String, EventHubClient, PartitionManager, EventProcessorOptions) Initializes a new instance of the EventProcessor<T> class. Declaration public EventProcessor(string consumerGroup, EventHubClient eventHubClient, PartitionManager partitionManager, EventProcessorOptions options = null) Parameters String consumerGroup The name of the consumer group this event processor is associated with. Events are read in the context of this group. EventHubClient eventHubClient The client used to interact with the Azure Event Hubs service. PartitionManager partitionManager Interacts with the storage system with responsibility for creation of checkpoints and for ownership claim. EventProcessorOptions options The set of options to use for this event processor. Remarks Ownership of the eventHubClient is assumed to be responsibility of the caller; this processor will delegate operations to it, but will not perform any clean-up tasks, such as closing or disposing of the instance. EventProcessor(String, EventHubClient, Func<PartitionContext, BasePartitionProcessor>, PartitionManager, EventProcessorOptions) Initializes a new instance of the EventProcessor<T> class. Declaration public EventProcessor(string consumerGroup, EventHubClient eventHubClient, Func<PartitionContext, BasePartitionProcessor> partitionProcessorFactory, PartitionManager partitionManager, EventProcessorOptions options = null) Parameters String consumerGroup The name of the consumer group this event processor is associated with. Events are read in the context of this group. EventHubClient eventHubClient The client used to interact with the Azure Event Hubs service. Func < PartitionContext , BasePartitionProcessor > partitionProcessorFactory Creates a partition processor instance for the associated PartitionContext . PartitionManager partitionManager Interacts with the storage system with responsibility for creation of checkpoints and for ownership claim. EventProcessorOptions options The set of options to use for this event processor. Remarks Ownership of the eventHubClient is assumed to be responsibility of the caller; this processor will delegate operations to it, but will not perform any clean-up tasks, such as closing or disposing of the instance. Properties Identifier A unique name used to identify this event processor. Declaration public virtual string Identifier { get; } Property Value String LoadBalanceUpdate The minimum amount of time to be elapsed between two load balancing verifications. Declaration protected virtual TimeSpan LoadBalanceUpdate { get; } Property Value TimeSpan OwnershipExpiration The minimum amount of time for an ownership to be considered expired without further updates. Declaration protected virtual TimeSpan OwnershipExpiration { get; } Property Value TimeSpan Methods StartAsync() Starts the event processor. In case it's already running, nothing happens. Declaration public virtual Task StartAsync() Returns Task A task to be resolved on when the operation has completed. StopAsync() Stops the event processor. In case it isn't running, nothing happens. Declaration public virtual Task StopAsync() Returns Task A task to be resolved on when the operation has completed. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Metadata.html": {
    "href": "api/Azure.Messaging.EventHubs.Metadata.html",
    "title": "Namespace Azure.Messaging.EventHubs.Metadata | Azure SDK for Net",
    "keywords": "Namespace Azure.Messaging.EventHubs.Metadata Classes EventHubProperties A set of information for an Event Hub. LastEnqueuedEventProperties A set of information about the enqueued state of a partition, as observed by the consumer. PartitionProperties A set of information for a single partition of an Event Hub."
  },
  "api/Azure.Messaging.EventHubs.Metadata.PartitionProperties.html": {
    "href": "api/Azure.Messaging.EventHubs.Metadata.PartitionProperties.html",
    "title": "Class PartitionProperties | Azure SDK for Net",
    "keywords": "Class PartitionProperties A set of information for a single partition of an Event Hub. Inheritance Object PartitionProperties Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class PartitionProperties : object Constructors PartitionProperties(String, String, Int64, Int64, Int64, DateTimeOffset, Boolean) Initializes a new instance of the PartitionProperties class. Declaration protected PartitionProperties(string name, string partitionId, long beginningSequenceNumber, long lastSequenceNumber, long lastOffset, DateTimeOffset lastEnqueuedTime, bool isEmpty) Parameters String name The name of the Event Hub that contains the partitions. String partitionId The identifier of the partition. Int64 beginningSequenceNumber The first sequence number available for events in the partition. Int64 lastSequenceNumber The sequence number observed the last event to be enqueued in the partition. Int64 lastOffset The offset of the last event to be enqueued in the partition. DateTimeOffset lastEnqueuedTime The date and time, in UTC, that the last event was enqueued in the partition. Boolean isEmpty Indicates whether or not the partition is currently empty. Properties BeginningSequenceNumber The first sequence number available for events in the partition. Declaration public long BeginningSequenceNumber { get; } Property Value Int64 EventHubName The name of the Event Hub where the partitions reside, specific to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String Id The identifier of the partition, unique to the Event Hub which contains it. Declaration public string Id { get; } Property Value String IsEmpty Indicates whether or not the partition is currently empty. Declaration public bool IsEmpty { get; } Property Value Boolean true if the partition is empty; otherwise, false . LastEnqueuedOffset The offset of the last observed event to be enqueued in the partition. Declaration public long LastEnqueuedOffset { get; } Property Value Int64 LastEnqueuedSequenceNumber The sequence number of the last observed event to be enqueued in the partition. Declaration public long LastEnqueuedSequenceNumber { get; } Property Value Int64 LastEnqueuedTime The date and time, in UTC, that the last observed event was enqueued in the partition. Declaration public DateTimeOffset LastEnqueuedTime { get; } Property Value DateTimeOffset Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventPosition.html": {
    "href": "api/Azure.Messaging.EventHubs.EventPosition.html",
    "title": "Class EventPosition | Azure SDK for Net",
    "keywords": "Class EventPosition The position of events in an Event Hub partition, typically used in the creation of an EventHubProducer . Inheritance Object EventPosition Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventPosition : object Properties Earliest Corresponds to the location of the first event present in the partition. Use this position to begin receiving from the first event that was enqueued in the partition which has not expired due to the retention policy. Declaration public static EventPosition Earliest { get; } Property Value EventPosition Latest Corresponds to the end of the partition, where no more events are currently enqueued. Use this position to begin receiving from the next event to be enqueued in the partition after an EventHubConsumer is created with this position. Declaration public static EventPosition Latest { get; } Property Value EventPosition Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . FromEnqueuedTime(DateTimeOffset) Corresponds to a specific date and time within the partition to begin seeking an event; the event enqueued after the requested enqueuedTime will become the current position. Declaration public static EventPosition FromEnqueuedTime(DateTimeOffset enqueuedTime) Parameters DateTimeOffset enqueuedTime The date and time, in UTC, from which the next available event should be chosen. Returns EventPosition The position of the specified event. FromOffset(Int64) Corresponds to the event in the partition at the provided offset, inclusive of that event. Declaration public static EventPosition FromOffset(long offset) Parameters Int64 offset The offset of an event with respect to its relative position in the partition. Returns EventPosition The position of the specified event. Remarks The offset is the relative position for event in the context of the stream. The offset should not be considered a stable value, as the same offset may refer to a different event as events reach the age limit for retention and are no longer visible within the stream. FromSequenceNumber(Int64, Boolean) Corresponds to the event in the partition having a specified sequence number associated with it. Declaration public static EventPosition FromSequenceNumber(long sequenceNumber, bool isInclusive = false) Parameters Int64 sequenceNumber The sequence number assigned to an event when it was enqueued in the partition. Boolean isInclusive If true, the event with the sequenceNumber is included; otherwise the next event in sequence will be received. Returns EventPosition The position of the specified event. GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubRetryPolicy.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubRetryPolicy.html",
    "title": "Class EventHubRetryPolicy | Azure SDK for Net",
    "keywords": "Class EventHubRetryPolicy An abstract representation of a policy to govern retrying of messaging operations. Inheritance Object EventHubRetryPolicy Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public abstract class EventHubRetryPolicy : object Remarks It is recommended that consumers not implement custom retry policies but instead configure the default policy by specifying the desired set of retry options when creating an EventHubClient . Methods CalculateRetryDelay(Exception, Int32) Calculates the amount of time to wait before another attempt should be made. Declaration public abstract TimeSpan? CalculateRetryDelay(Exception lastException, int attemptCount) Parameters Exception lastException The last exception that was observed for the operation to be retried. Int32 attemptCount The number of total attempts that have been made, including the initial attempt before any retries. Returns Nullable < TimeSpan > The amount of time to delay before retrying the associated operation; if null , then the operation is no longer eligible to be retried. CalculateTryTimeout(Int32) Calculates the amount of time to allow the current attempt for an operation to complete before considering it to be timed out. Declaration public abstract TimeSpan CalculateTryTimeout(int attemptCount) Parameters Int32 attemptCount The number of total attempts that have been made, including the initial attempt before any retries. Returns TimeSpan The amount of time to allow for an operation to complete. Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration) See Also RetryOptions"
  },
  "api/Azure.Messaging.EventHubs.Errors.ServiceBusyException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.ServiceBusyException.html",
    "title": "Class ServiceBusyException | Azure SDK for Net",
    "keywords": "Class ServiceBusyException An exception which occurs when the Azure Event Hubs service reports that it is busy in response to a client request to perform an operation. Inheritance Object EventHubsException ServiceBusyException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class ServiceBusyException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.MessageSizeExceededException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.MessageSizeExceededException.html",
    "title": "Class MessageSizeExceededException | Azure SDK for Net",
    "keywords": "Class MessageSizeExceededException An exception which occurs when a message is larger than the maximum size allowed for its transport. Inheritance Object EventHubsException MessageSizeExceededException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class MessageSizeExceededException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.EventHubsResourceNotFoundException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.EventHubsResourceNotFoundException.html",
    "title": "Class EventHubsResourceNotFoundException | Azure SDK for Net",
    "keywords": "Class EventHubsResourceNotFoundException An exception which occurs when an Event Hubs resource, such as an Event Hub, consumer group, or partition cannot be found. Inheritance Object EventHubsException EventHubsResourceNotFoundException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventHubsResourceNotFoundException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.EventHubsCommunicationException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.EventHubsCommunicationException.html",
    "title": "Class EventHubsCommunicationException | Azure SDK for Net",
    "keywords": "Class EventHubsCommunicationException An exception which occurs when there is a general communications error encountered when interacting with the Azure Event Hubs service. Inheritance Object EventHubsException EventHubsCommunicationException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventHubsCommunicationException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.BatchOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.BatchOptions.html",
    "title": "Class BatchOptions | Azure SDK for Net",
    "keywords": "Class BatchOptions The set of options that can be specified to influence the way in which an event batch behaves and is sent to the Event Hubs service. Inheritance Object SendOptions BatchOptions Inherited Members SendOptions.PartitionKey Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class BatchOptions : SendOptions Properties MaximumizeInBytes The maximum size to allow for a single batch of events, in bytes. Declaration public long? MaximumizeInBytes { get; set; } Property Value Nullable < Int64 > The desired limit, in bytes, for the size of the associated event batch. If null , the maximum size allowed by the active transport will be used. Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . Overrides SendOptions.Equals(Object) GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides SendOptions.GetHashCode() ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Overrides SendOptions.ToString() Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Authorization.html": {
    "href": "api/Azure.Messaging.EventHubs.Authorization.html",
    "title": "Namespace Azure.Messaging.EventHubs.Authorization | Azure SDK for Net",
    "keywords": "Namespace Azure.Messaging.EventHubs.Authorization Classes EventHubSharedKeyCredential Provides a credential based on a shared access signature for a given Event Hub instance."
  },
  "api/TrackOne.html": {
    "href": "api/TrackOne.html",
    "title": "Namespace TrackOne | Azure SDK for Net",
    "keywords": "Namespace TrackOne Enums TokenScope A enum representing the scope of the TrackOne.SecurityToken . TransportType Supported transport types"
  },
  "api/TrackOne.TransportType.html": {
    "href": "api/TrackOne.TransportType.html",
    "title": "Enum TransportType | Azure SDK for Net",
    "keywords": "Enum TransportType Supported transport types Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public enum TransportType : int Amqp AMQP over the default TCP transport protocol AmqpWebSockets AMQP over the Web Sockets transport protocol Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TransportType, TConfiguration>(TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.TransportType.html": {
    "href": "api/Azure.Messaging.EventHubs.TransportType.html",
    "title": "Enum TransportType | Azure SDK for Net",
    "keywords": "Enum TransportType Specifies the type of protocol and transport that will be used for communicating with Azure Event Hubs. Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public enum TransportType : int AmqpTcp The connection uses the AMQP protocol over TCP. AmqpWebSockets The connection uses the AMQP protocol over web sockets. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TransportType, TConfiguration>(TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.SendOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.SendOptions.html",
    "title": "Class SendOptions | Azure SDK for Net",
    "keywords": "Class SendOptions The set of options that can be specified to influence the way in which events are sent to the Event Hubs service. Inheritance Object SendOptions BatchOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class SendOptions : object Properties PartitionKey Allows a hashing key to be provided for the batch of events, which instructs the Event Hubs service map this key to a specific partition but allowing the service to choose an arbitrary, partition for this batch of events and any other batches using the same partition hashing key. The selection of a partition is stable for a given partition hashing key. Should any other batches of events be sent using the same exact partition hashing key, the Event Hubs service will route them all to the same partition. This should be specified only when there is a need to group events by partition, but there is flexibility into which partition they are routed. If ensuring that a batch of events is sent only to a specific partition, it is recommended that the identifier of the position be specified directly when sending the batch. Declaration public string PartitionKey { get; set; } Property Value String The partition hashing key to associate with the event or batch of events. Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.PartitionContext.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.PartitionContext.html",
    "title": "Class PartitionContext | Azure SDK for Net",
    "keywords": "Class PartitionContext Contains information about a partition that a partition processor will be processing events from. It's also responsible for the creation of checkpoints. The interaction with the chosen storage service is done via PartitionManager . Inheritance Object PartitionContext Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class PartitionContext : object Constructors PartitionContext(String, String, String, String, String, PartitionManager) Initializes a new instance of the PartitionContext class. Declaration protected PartitionContext(string fullyQualifiedNamespace, string eventHubName, string consumerGroup, string partitionId, string ownerIdentifier, PartitionManager partitionManager) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace this context is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub this context is associated with, relative to the Event Hubs namespace that contains it. String consumerGroup The name of the consumer group this context is associated with. String partitionId The identifier of the Event Hub partition this context is associated with. String ownerIdentifier The identifier of the associated EventProcessor<T> instance. PartitionManager partitionManager Interacts with the storage system with responsibility for creation of checkpoints. Properties ConsumerGroup The name of the consumer group this context is associated with. Declaration public string ConsumerGroup { get; } Property Value String EventHubName The name of the specific Event Hub that the context is associated with, relative to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String FullyQualifiedNamespace The fully qualified Event Hubs namespace this context is associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . Declaration public string FullyQualifiedNamespace { get; } Property Value String OwnerIdentifier The identifier of the associated EventProcessor<T> instance. Declaration public string OwnerIdentifier { get; } Property Value String PartitionId The identifier of the Event Hub partition this context is associated with. Declaration public string PartitionId { get; } Property Value String Methods UpdateCheckpointAsync(EventData) Updates the checkpoint using the given information for the associated partition and consumer group in the chosen storage service. Declaration public virtual Task UpdateCheckpointAsync(EventData eventData) Parameters EventData eventData The event containing the information to be stored in the checkpoint. Returns Task A task to be resolved on when the operation has completed. UpdateCheckpointAsync(Int64, Int64) Updates the checkpoint using the given information for the associated partition and consumer group in the chosen storage service. Declaration public virtual Task UpdateCheckpointAsync(long offset, long sequenceNumber) Parameters Int64 offset The offset of the EventData the new checkpoint will be associated with. Int64 sequenceNumber The sequence number assigned to the EventData the new checkpoint will be associated with. Returns Task A task to be resolved on when the operation has completed. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Processor.InMemoryPartitionManager.html": {
    "href": "api/Azure.Messaging.EventHubs.Processor.InMemoryPartitionManager.html",
    "title": "Class InMemoryPartitionManager | Azure SDK for Net",
    "keywords": "Class InMemoryPartitionManager A volatile in-memory storage service that keeps track of checkpoints and ownership. Inheritance Object PartitionManager InMemoryPartitionManager Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class InMemoryPartitionManager : PartitionManager Constructors InMemoryPartitionManager(Action<String>) Initializes a new instance of the InMemoryPartitionManager class. Declaration public InMemoryPartitionManager(Action<string> logger = null) Parameters Action < String > logger Logs activities performed by this partition manager. Methods ClaimOwnershipAsync(IEnumerable<PartitionOwnership>) Attempts to claim ownership of partitions for processing. Declaration public override Task<IEnumerable<PartitionOwnership>> ClaimOwnershipAsync(IEnumerable<PartitionOwnership> partitionOwnership) Parameters IEnumerable < PartitionOwnership > partitionOwnership An enumerable containing all the ownership to claim. Returns Task < IEnumerable < PartitionOwnership >> An enumerable containing the successfully claimed ownership. Overrides PartitionManager.ClaimOwnershipAsync(IEnumerable<PartitionOwnership>) ListOwnershipAsync(String, String, String) Retrieves a complete ownership list from the in-memory storage service. Declaration public override Task<IEnumerable<PartitionOwnership>> ListOwnershipAsync(string fullyQualifiedNamespace, string eventHubName, string consumerGroup) Parameters String fullyQualifiedNamespace The fully qualified Event Hubs namespace the ownership are associated with. This is likely to be similar to {yournamespace}.servicebus.windows.net . String eventHubName The name of the specific Event Hub the ownership are associated with, relative to the Event Hubs namespace that contains it. String consumerGroup The name of the consumer group the ownership are associated with. Returns Task < IEnumerable < PartitionOwnership >> An enumerable containing all the existing ownership for the associated Event Hub and consumer group. Overrides PartitionManager.ListOwnershipAsync(String, String, String) UpdateCheckpointAsync(Checkpoint) Updates the checkpoint using the given information for the associated partition and consumer group in the in-memory storage service. Declaration public override Task UpdateCheckpointAsync(Checkpoint checkpoint) Parameters Checkpoint checkpoint The checkpoint containing the information to be stored. Returns Task A task to be resolved on when the operation has completed. Overrides PartitionManager.UpdateCheckpointAsync(Checkpoint) Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Metadata.LastEnqueuedEventProperties.html": {
    "href": "api/Azure.Messaging.EventHubs.Metadata.LastEnqueuedEventProperties.html",
    "title": "Class LastEnqueuedEventProperties | Azure SDK for Net",
    "keywords": "Class LastEnqueuedEventProperties A set of information about the enqueued state of a partition, as observed by the consumer. Inheritance Object LastEnqueuedEventProperties Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class LastEnqueuedEventProperties : object Constructors LastEnqueuedEventProperties(String, String) Initializes a new instance of the LastEnqueuedEventProperties class. Declaration protected LastEnqueuedEventProperties(string eventHubName, string partitionId) Parameters String eventHubName The name of the Event Hub that contains the partitions. String partitionId The identifier of the partition. LastEnqueuedEventProperties(String, String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>) Initializes a new instance of the LastEnqueuedEventProperties class. Declaration protected LastEnqueuedEventProperties(string eventHubName, string partitionId, long? lastSequenceNumber, long? lastOffset, DateTimeOffset? lastEnqueuedTime, DateTimeOffset? lastUpdatedTime) Parameters String eventHubName The name of the Event Hub that contains the partitions. String partitionId The identifier of the partition. Nullable < Int64 > lastSequenceNumber The sequence number observed the last event to be enqueued in the partition. Nullable < Int64 > lastOffset The offset of the last event to be enqueued in the partition. Nullable < DateTimeOffset > lastEnqueuedTime The date and time, in UTC, that the last event was enqueued in the partition. Nullable < DateTimeOffset > lastUpdatedTime The date and time, in UTC, that the metrics were last updated. Properties EventHubName The name of the Event Hub where the partitions reside, specific to the Event Hubs namespace that contains it. Declaration public string EventHubName { get; } Property Value String InformationReceived The date and time, in UTC, that the information about the last enqueued event was received. Declaration public DateTimeOffset? InformationReceived { get; } Property Value Nullable < DateTimeOffset > LastEnqueuedOffset The offset of the last observed event to be enqueued in the partition. Declaration public long? LastEnqueuedOffset { get; } Property Value Nullable < Int64 > LastEnqueuedSequenceNumber The sequence number of the last observed event to be enqueued in the partition. Declaration public long? LastEnqueuedSequenceNumber { get; } Property Value Nullable < Int64 > LastEnqueuedTime The date and time, in UTC, that the last observed event was enqueued in the partition. Declaration public DateTimeOffset? LastEnqueuedTime { get; } Property Value Nullable < DateTimeOffset > PartitionId The identifier of the partition, unique to the Event Hub which contains it. Declaration public string PartitionId { get; } Property Value String Methods UpdateMetrics(Nullable<Int64>, Nullable<Int64>, Nullable<DateTimeOffset>, Nullable<DateTimeOffset>) Updates the current set of metrics for the partition. Declaration protected void UpdateMetrics(long? lastSequenceNumber, long? lastOffset, DateTimeOffset? lastEnqueuedTime, DateTimeOffset? lastReceivedTime) Parameters Nullable < Int64 > lastSequenceNumber The sequence number observed the last event to be enqueued in the partition. Nullable < Int64 > lastOffset The offset of the last event to be enqueued in the partition. Nullable < DateTimeOffset > lastEnqueuedTime The date and time, in UTC, that the last event was enqueued in the partition. Nullable < DateTimeOffset > lastReceivedTime The date and time, in UTC, that the metrics were last updated. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Metadata.EventHubProperties.html": {
    "href": "api/Azure.Messaging.EventHubs.Metadata.EventHubProperties.html",
    "title": "Class EventHubProperties | Azure SDK for Net",
    "keywords": "Class EventHubProperties A set of information for an Event Hub. Inheritance Object EventHubProperties Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubProperties : object Constructors EventHubProperties(String, DateTimeOffset, String[]) Initializes a new instance of the EventHubProperties class. Declaration protected EventHubProperties(string name, DateTimeOffset createdAt, string[] partitionIds) Parameters String name The name of the Event Hub. DateTimeOffset createdAt The date and time at which the Event Hub was created. String [] partitionIds The set of unique identifiers for each partition. Properties CreatedAt The date and time, in UTC, at which the Event Hub was created. Declaration public DateTimeOffset CreatedAt { get; } Property Value DateTimeOffset Name The name of the Event Hub, specific to the namespace that contains it. Declaration public string Name { get; } Property Value String PartitionIds The set of unique identifiers for each partition in the Event Hub. Declaration public string[] PartitionIds { get; } Property Value String [] Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventHubClientOptions.html": {
    "href": "api/Azure.Messaging.EventHubs.EventHubClientOptions.html",
    "title": "Class EventHubClientOptions | Azure SDK for Net",
    "keywords": "Class EventHubClientOptions The set of options that can be specified when creating an EventHubClient to configure its behavior. Inheritance Object EventHubClientOptions Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public class EventHubClientOptions : object Properties Proxy The proxy to use for communication over web sockets. If not specified, the system-wide proxy settings will be honored. Declaration public IWebProxy Proxy { get; set; } Property Value IWebProxy Remarks A proxy cannot be used for communication over TCP; if web sockets are not in use, specifying a proxy is an invalid option. RetryOptions The set of options to use for determining whether a failed operation should be retried and, if so, the amount of time to wait between retry attempts. Declaration public RetryOptions RetryOptions { get; set; } Property Value RetryOptions TransportType The type of protocol and transport that will be used for communicating with the Event Hubs service. Declaration public TransportType TransportType { get; set; } Property Value TransportType Methods Equals(Object) Determines whether the specified is equal to this instance. Declaration public override bool Equals(object obj) Parameters Object obj The to compare with this instance. Returns Boolean true if the specified is equal to this instance; otherwise, false . GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Converts the instance to string representation. Declaration public override string ToString() Returns String A that represents this instance. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.EventDataBatch.html": {
    "href": "api/Azure.Messaging.EventHubs.EventDataBatch.html",
    "title": "Class EventDataBatch | Azure SDK for Net",
    "keywords": "Class EventDataBatch A set of EventData with size constraints known up-front, intended to be sent to the Event Hubs service as a single batch. Inheritance Object EventDataBatch Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventDataBatch : IDisposable Properties Count The count of events contained in the batch. Declaration public int Count { get; } Property Value Int32 MaximumSizeInBytes The maximum size allowed for the batch, in bytes. This includes the events in the batch as well as any overhead for the batch itself when sent to the Event Hubs service. Declaration public long MaximumSizeInBytes { get; } Property Value Int64 SizeInBytes The size of the batch, in bytes, as it will be sent to the Event Hubs service. Declaration public long SizeInBytes { get; } Property Value Int64 Methods Dispose() Performs the task needed to clean up resources used by the EventDataBatch . Declaration public void Dispose() TryAdd(EventData) Attempts to add an event to the batch, ensuring that the size of the batch does not exceed its maximum. Declaration public bool TryAdd(EventData eventData) Parameters EventData eventData The event to attempt to add to the batch. Returns Boolean true if the event was added; otherwise, false . Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.QuotaExceededException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.QuotaExceededException.html",
    "title": "Class QuotaExceededException | Azure SDK for Net",
    "keywords": "Class QuotaExceededException An exception which occurs when the quota applied to an Event Hubs resource has been exceeded while interacting with the Azure Event Hubs service. Inheritance Object EventHubsException QuotaExceededException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class QuotaExceededException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Errors.EventHubsTimeoutException.html": {
    "href": "api/Azure.Messaging.EventHubs.Errors.EventHubsTimeoutException.html",
    "title": "Class EventHubsTimeoutException | Azure SDK for Net",
    "keywords": "Class EventHubsTimeoutException An exception which occurs when an operation or other request times out while interacting with the Azure Event Hubs service. Inheritance Object EventHubsException EventHubsTimeoutException Inherited Members EventHubsException.IsTransient EventHubsException.ResourceName EventHubsException.Message Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventHubsTimeoutException : EventHubsException Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration)"
  },
  "api/Azure.Messaging.EventHubs.Authorization.EventHubSharedKeyCredential.html": {
    "href": "api/Azure.Messaging.EventHubs.Authorization.EventHubSharedKeyCredential.html",
    "title": "Class EventHubSharedKeyCredential | Azure SDK for Net",
    "keywords": "Class EventHubSharedKeyCredential Provides a credential based on a shared access signature for a given Event Hub instance. Inheritance Object Azure.Core.TokenCredential EventHubSharedKeyCredential Namespace : System.Dynamic.ExpandoObject Assembly : Azure.Messaging.EventHubs.dll Syntax public sealed class EventHubSharedKeyCredential : TokenCredential Constructors EventHubSharedKeyCredential(String, String) Initializes a new instance of the EventHubSharedKeyCredential class. Declaration public EventHubSharedKeyCredential(string sharedAccessKeyName, string sharedAccessKey) Parameters String sharedAccessKeyName The name of the shared access key to be used for authorization, as reported by the Azure portal. String sharedAccessKey The value of the shared access key to be used for authorization, as reported by the Azure portal. Properties SharedAccessKeyName The name of the shared access key to be used for authorization, as reported by the Azure portal. Declaration public string SharedAccessKeyName { get; } Property Value String Methods GetToken(TokenRequest, CancellationToken) Retrieves the token that represents the shared access signature credential, for use in authorization against an Event Hub. Declaration public override AccessToken GetToken(TokenRequest request, CancellationToken cancellationToken) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken The token used to request cancellation of the operation. Returns Azure.Core.AccessToken The token representing the shared access signature for this credential. GetTokenAsync(TokenRequest, CancellationToken) Retrieves the token that represents the shared access signature credential, for use in authorization against an Event Hub. Declaration public override Task<AccessToken> GetTokenAsync(TokenRequest request, CancellationToken cancellationToken) Parameters Azure.Core.TokenRequest request The details of the authentication request. CancellationToken cancellationToken The token used to request cancellation of the operation. Returns Task < Azure.Core.AccessToken > The token representing the shared access signature for this credential. Extension Methods AzureClientBuilderExtensions.AddEventHubClient<TBuilder, TConfiguration>(TBuilder, TConfiguration) See Also Azure.Core.TokenCredential"
  }
}